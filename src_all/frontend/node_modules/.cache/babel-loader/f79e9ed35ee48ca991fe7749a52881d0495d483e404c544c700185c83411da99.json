{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'RoutePlanner',\n  setup() {\n    const currentArea = ref(null);\n    const routeType = ref('pointToPoint'); // 默认为点对点路线规划\n    const startPoint = ref('');\n    const endPoint = ref('');\n    const currentLocation = ref('');\n    const viaPoints = ref(['']);\n    const transport = ref('walk');\n    const error = ref('');\n    const routeInfo = ref('');\n    const selectArea = area => {\n      currentArea.value = area;\n      routeType.value = 'pointToPoint'; // 默认选择点对点路线规划\n    };\n    const addViaPoint = () => {\n      viaPoints.value.push('');\n    };\n    const searchRoute = async () => {\n      try {\n        const response = await axios.post('/api/route-plan', {\n          area: currentArea.value,\n          type: routeType.value,\n          startPoint: startPoint.value,\n          endPoint: endPoint.value,\n          currentLocation: currentLocation.value,\n          viaPoints: viaPoints.value,\n          transport: transport.value\n        });\n        if (response.data.success) {\n          routeInfo.value = response.data.info;\n        } else {\n          error.value = response.data.error;\n        }\n      } catch (err) {\n        error.value = '搜索路线时发生错误。';\n      }\n    };\n    return {\n      currentArea,\n      routeType,\n      startPoint,\n      endPoint,\n      currentLocation,\n      viaPoints,\n      transport,\n      error,\n      routeInfo,\n      selectArea,\n      addViaPoint,\n      searchRoute\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","name","setup","currentArea","routeType","startPoint","endPoint","currentLocation","viaPoints","transport","error","routeInfo","selectArea","area","value","addViaPoint","push","searchRoute","response","post","type","data","success","info","err"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\RoutePlanner.vue"],"sourcesContent":["<!-- RoutePlanner.vue -->\r\n<template>\r\n  <div class=\"route-planner\">\r\n    <h1>路线规划</h1>\r\n    <!-- 选择景区或校园 -->\r\n    <div>\r\n      <button @click=\"selectArea('scenic')\">景区</button>\r\n      <button @click=\"selectArea('campus')\">校园</button>\r\n    </div>\r\n    <!-- 根据选择显示不同的输入框 -->\r\n    <!-- 切换点对点和多途径点 -->\r\n    <div v-if=\"currentArea\">\r\n      <h2>{{ currentArea === 'scenic' ? '景区路线规划' : '校园路线规划' }}</h2>\r\n      <button @click=\"toggleRouteType\">切换到{{ routeType === 'pointToPoint' ? '多途径点' : '点对点' }}</button>\r\n      <!-- 点对点路线规划 -->\r\n      <div v-if=\"routeType === 'pointToPoint'\">\r\n        <input v-model=\"startPoint\" placeholder=\"起点\">\r\n        <input v-model=\"endPoint\" placeholder=\"终点\">\r\n        <select v-model=\"transport\">\r\n          <option value=\"walk\">步行</option>\r\n          <!--景区特有的电动车-->\r\n          <option v-if=\"currentArea === 'scenic'\" value=\"ebike\">电动车</option>\r\n          <!-- 校园的交通工具选项 -->\r\n          <option v-if=\"currentArea === 'campus'\" value=\"bike\">自行车</option>\r\n        </select>\r\n        <button @click=\"searchRoute\">搜索</button>\r\n      </div>\r\n      <!-- 多途径点路线规划 -->\r\n      <div v-else>\r\n        <input v-model=\"currentLocation\" placeholder=\"当前位置\">\r\n        <div v-for=\"(point, index) in viaPoints\" :key=\"index\">\r\n          <input v-model=\"viaPoints[index]\" placeholder=\"途径点\">\r\n        </div>\r\n        <button @click=\"addViaPoint\">添加途径点</button>\r\n        <select v-model=\"transport\">\r\n          <option value=\"walk\">步行</option>\r\n          <button @click=\"toggleRouteType\">切换到{{ routeType === 'pointToPoint' ? '多途径点' : '点对点' }}</button>\r\n          <!-- 校园的交通工具选项 -->\r\n          <option v-if=\"currentArea === 'campus'\" value=\"bike\">自行车</option>\r\n        </select>\r\n        <button @click=\"searchRoute\">搜索</button>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-if=\"routeInfo\" class=\"route-info\">\r\n      <h3>路线信息:</h3>\r\n      <p>{{ routeInfo }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'RoutePlanner',\r\n  setup() {\r\n    const currentArea = ref(null);\r\n    const routeType = ref('pointToPoint'); // 默认为点对点路线规划\r\n    const startPoint = ref('');\r\n    const endPoint = ref('');\r\n    const currentLocation = ref('');\r\n    const viaPoints = ref(['']);\r\n    const transport = ref('walk');\r\n    const error = ref('');\r\n    const routeInfo = ref('');\r\n\r\n    const selectArea = (area) => {\r\n      currentArea.value = area;\r\n      routeType.value = 'pointToPoint'; // 默认选择点对点路线规划\r\n    };\r\n\r\n    const addViaPoint = () => {\r\n      viaPoints.value.push('');\r\n    };\r\n\r\n    const searchRoute = async () => {\r\n      try {\r\n        const response = await axios.post('/api/route-plan', {\r\n          area: currentArea.value,\r\n          type: routeType.value,\r\n          startPoint: startPoint.value,\r\n          endPoint: endPoint.value,\r\n          currentLocation: currentLocation.value,\r\n          viaPoints: viaPoints.value,\r\n          transport: transport.value,\r\n        });\r\n        if (response.data.success) {\r\n          routeInfo.value = response.data.info;\r\n        } else {\r\n          error.value = response.data.error;\r\n        }\r\n      } catch (err) {\r\n        error.value = '搜索路线时发生错误。';\r\n      }\r\n    };\r\n\r\n    return {\r\n      currentArea,\r\n      routeType,\r\n      startPoint,\r\n      endPoint,\r\n      currentLocation,\r\n      viaPoints,\r\n      transport,\r\n      error,\r\n      routeInfo,\r\n      selectArea,\r\n      addViaPoint,\r\n      searchRoute,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 你的 CSS 样式 */\r\n</style>"],"mappings":";AAoDA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIJ,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMK,SAAQ,GAAIL,GAAG,CAAC,cAAc,CAAC,EAAE;IACvC,MAAMM,UAAS,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,eAAc,GAAIR,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMS,SAAQ,GAAIT,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3B,MAAMU,SAAQ,GAAIV,GAAG,CAAC,MAAM,CAAC;IAC7B,MAAMW,KAAI,GAAIX,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMY,SAAQ,GAAIZ,GAAG,CAAC,EAAE,CAAC;IAEzB,MAAMa,UAAS,GAAKC,IAAI,IAAK;MAC3BV,WAAW,CAACW,KAAI,GAAID,IAAI;MACxBT,SAAS,CAACU,KAAI,GAAI,cAAc,EAAE;IACpC,CAAC;IAED,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxBP,SAAS,CAACM,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,IAAI,CAAC,iBAAiB,EAAE;UACnDN,IAAI,EAAEV,WAAW,CAACW,KAAK;UACvBM,IAAI,EAAEhB,SAAS,CAACU,KAAK;UACrBT,UAAU,EAAEA,UAAU,CAACS,KAAK;UAC5BR,QAAQ,EAAEA,QAAQ,CAACQ,KAAK;UACxBP,eAAe,EAAEA,eAAe,CAACO,KAAK;UACtCN,SAAS,EAAEA,SAAS,CAACM,KAAK;UAC1BL,SAAS,EAAEA,SAAS,CAACK;QACvB,CAAC,CAAC;QACF,IAAII,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;UACzBX,SAAS,CAACG,KAAI,GAAII,QAAQ,CAACG,IAAI,CAACE,IAAI;QACtC,OAAO;UACLb,KAAK,CAACI,KAAI,GAAII,QAAQ,CAACG,IAAI,CAACX,KAAK;QACnC;MACF,EAAE,OAAOc,GAAG,EAAE;QACZd,KAAK,CAACI,KAAI,GAAI,YAAY;MAC5B;IACF,CAAC;IAED,OAAO;MACLX,WAAW;MACXC,SAAS;MACTC,UAAU;MACVC,QAAQ;MACRC,eAAe;MACfC,SAAS;MACTC,SAAS;MACTC,KAAK;MACLC,SAAS;MACTC,UAAU;MACVG,WAAW;MACXE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}