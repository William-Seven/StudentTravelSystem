{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'StudyTourDiary',\n  setup() {\n    const router = useRouter();\n    const searchTitle = ref('');\n    const searchAuthor = ref('');\n    const searchDescription = ref('');\n    const searchContent = ref('');\n    const sort = ref('0'); // 默认按照热度排序\n    const diaries = ref([]); // 存储日记列表\n\n    // 搜索日记\n    const searchDiaries = async () => {\n      try {\n        const response = await axios.post('/api/diary-search', {\n          title: searchTitle.value || '-1',\n          author: searchAuthor.value || '-1',\n          description: searchDescription.value || '-1',\n          content: searchContent.value || '-1',\n          sort: sort.value\n        });\n        const list = response.data.split('\\n');\n        diaries.value = list.map((diaryData, index) => {\n          if (index % 4 === 0) return null; // 忽略标题行\n          const diary = parseDiaryData(diaryData);\n          return diary;\n        }).filter(Boolean); // 移除标题行\n      } catch (err) {\n        console.error('Error searching diaries:', err);\n      }\n    };\n\n    // 解析日记数据的函数\n    const parseDiaryData = diaryData => {\n      const [content, popularity, rating] = diaryData.split(' ');\n      return {\n        ...lastDiary,\n        // 填充上一个标题、作者、描述对象\n        content: content.trim(),\n        popularity: parseInt(popularity, 10),\n        rating: parseFloat(rating)\n      };\n    };\n\n    // 用于存储上一个日记的标题、作者、描述对象\n    let lastDiary = ref(null);\n\n    // 跳转到日记详情页面\n    const goToDiaryDetail = diary => {\n      router.push({\n        path: '/diary-detail',\n        query: {\n          diary: JSON.stringify(diary)\n        }\n      });\n    };\n\n    // 跳转到写日记页面\n    const goToWriteDiary = () => {\n      router.push('/write-diary');\n    };\n\n    // 跳转到首页\n    const goToDashboard = () => {\n      router.push('/dashboard');\n    };\n    return {\n      searchTitle,\n      searchAuthor,\n      searchDescription,\n      searchContent,\n      diaries,\n      searchDiaries,\n      goToDiaryDetail,\n      goToWriteDiary,\n      goToDashboard\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","setup","router","searchTitle","searchAuthor","searchDescription","searchContent","sort","diaries","searchDiaries","response","post","title","value","author","description","content","list","data","split","map","diaryData","index","diary","parseDiaryData","filter","Boolean","err","console","error","popularity","rating","lastDiary","trim","parseInt","parseFloat","goToDiaryDetail","push","path","query","JSON","stringify","goToWriteDiary","goToDashboard"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\StudyTourDiary.vue"],"sourcesContent":["<!-- StudyTourDiary.vue -->\r\n<template>\r\n    <div class=\"study-tour-diary\">\r\n        <h1>游学日记</h1>\r\n        <button @click=\"goToDashboard\">返回首页</button>\r\n        <!-- 四个搜索框 -->\r\n        <div>\r\n            <input type=\"text\" v-model=\"searchTitle\" placeholder=\"搜索标题\">\r\n            <input type=\"text\" v-model=\"searchAuthor\" placeholder=\"搜索作者名\">\r\n            <input type=\"text\" v-model=\"searchDescription\" placeholder=\"搜索描述对象\">\r\n            <input type=\"text\" v-model=\"searchContent\" placeholder=\"搜索内容\">\r\n        </div>\r\n        <!-- 排序选择 -->\r\n        <div>\r\n            <label for=\"sort\">排序方式:</label>\r\n            <select id=\"sort\" v-model=\"sort\">\r\n                <option value='0'>热度</option>\r\n                <option value='1'>评分</option>\r\n            </select>\r\n        </div>\r\n        <!-- 搜索按钮 -->\r\n        <button @click=\"searchDiaries\">搜索</button>\r\n        <!-- 游学日记列表 -->\r\n        <ul v-if=\"diaries.length\" class=\"diary-list\">\r\n            <li v-for=\"diary in sortedDiaries\" :key=\"diary.title\" class=\"diary-item\">\r\n                <p>标题：{{ diary.title }}</p>\r\n                <p>作者：{{ diary.author }}</p>\r\n                <p>描述对象：{{ diary.description }}</p>\r\n                <p>热度：{{ diary.popularity }}</p>\r\n                <p>评分：{{ diary.rating }}</p>\r\n                <button @click=\"goToDiaryDetail(diary)\">详情</button>\r\n            </li>\r\n        </ul>\r\n        <p v-else>没有找到相关日记。</p>\r\n        <!-- 写日记按钮 -->\r\n        <button @click=\"goToWriteDiary\">写日记</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    name: 'StudyTourDiary',\r\n    setup() {\r\n        const router = useRouter();\r\n        const searchTitle = ref('');\r\n        const searchAuthor = ref('');\r\n        const searchDescription = ref('');\r\n        const searchContent = ref('');\r\n        const sort = ref('0'); // 默认按照热度排序\r\n        const diaries = ref([]); // 存储日记列表\r\n\r\n        // 搜索日记\r\n        const searchDiaries = async () => {\r\n            try {\r\n                const response = await axios.post('/api/diary-search', {\r\n                    title: searchTitle.value || '-1',\r\n                    author: searchAuthor.value || '-1',\r\n                    description: searchDescription.value || '-1',\r\n                    content: searchContent.value || '-1',\r\n                    sort: sort.value,\r\n                });\r\n\r\n                const list = response.data.split('\\n');\r\n                diaries.value = list.map((diaryData, index) => {\r\n                    if (index % 4 === 0) return null; // 忽略标题行\r\n                    const diary = parseDiaryData(diaryData);\r\n                    return diary;\r\n                }).filter(Boolean); // 移除标题行\r\n            } catch (err) {\r\n                console.error('Error searching diaries:', err);\r\n            }\r\n        };\r\n\r\n        // 解析日记数据的函数\r\n        const parseDiaryData = (diaryData) => {\r\n            const [content, popularity, rating] = diaryData.split(' ');\r\n            return {\r\n                ...lastDiary, // 填充上一个标题、作者、描述对象\r\n                content: content.trim(),\r\n                popularity: parseInt(popularity, 10),\r\n                rating: parseFloat(rating),\r\n            };\r\n        };\r\n\r\n        // 用于存储上一个日记的标题、作者、描述对象\r\n        let lastDiary = ref(null);\r\n\r\n        // 跳转到日记详情页面\r\n        const goToDiaryDetail = (diary) => {\r\n            router.push({\r\n                path: '/diary-detail',\r\n                query: { diary: JSON.stringify(diary) },\r\n            });\r\n        };\r\n\r\n        // 跳转到写日记页面\r\n        const goToWriteDiary = () => {\r\n            router.push('/write-diary');\r\n        };\r\n\r\n        // 跳转到首页\r\n        const goToDashboard = () => {\r\n            router.push('/dashboard');\r\n        };\r\n\r\n        return {\r\n            searchTitle,\r\n            searchAuthor,\r\n            searchDescription,\r\n            searchContent,\r\n            diaries,\r\n            searchDiaries,\r\n            goToDiaryDetail,\r\n            goToWriteDiary,\r\n            goToDashboard,\r\n        };\r\n    },\r\n};\r\n</script>"],"mappings":";AAwCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIH,SAAS,CAAC,CAAC;IAC1B,MAAMI,WAAU,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMO,YAAW,GAAIP,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMQ,iBAAgB,GAAIR,GAAG,CAAC,EAAE,CAAC;IACjC,MAAMS,aAAY,GAAIT,GAAG,CAAC,EAAE,CAAC;IAC7B,MAAMU,IAAG,GAAIV,GAAG,CAAC,GAAG,CAAC,EAAE;IACvB,MAAMW,OAAM,GAAIX,GAAG,CAAC,EAAE,CAAC,EAAE;;IAEzB;IACA,MAAMY,aAAY,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,mBAAmB,EAAE;UACnDC,KAAK,EAAET,WAAW,CAACU,KAAI,IAAK,IAAI;UAChCC,MAAM,EAAEV,YAAY,CAACS,KAAI,IAAK,IAAI;UAClCE,WAAW,EAAEV,iBAAiB,CAACQ,KAAI,IAAK,IAAI;UAC5CG,OAAO,EAAEV,aAAa,CAACO,KAAI,IAAK,IAAI;UACpCN,IAAI,EAAEA,IAAI,CAACM;QACf,CAAC,CAAC;QAEF,MAAMI,IAAG,GAAIP,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC;QACtCX,OAAO,CAACK,KAAI,GAAII,IAAI,CAACG,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;UAC3C,IAAIA,KAAI,GAAI,MAAM,CAAC,EAAE,OAAO,IAAI,EAAE;UAClC,MAAMC,KAAI,GAAIC,cAAc,CAACH,SAAS,CAAC;UACvC,OAAOE,KAAK;QAChB,CAAC,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC,EAAE;MACxB,EAAE,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAClD;IACJ,CAAC;;IAED;IACA,MAAMH,cAAa,GAAKH,SAAS,IAAK;MAClC,MAAM,CAACL,OAAO,EAAEc,UAAU,EAAEC,MAAM,IAAIV,SAAS,CAACF,KAAK,CAAC,GAAG,CAAC;MAC1D,OAAO;QACH,GAAGa,SAAS;QAAE;QACdhB,OAAO,EAAEA,OAAO,CAACiB,IAAI,CAAC,CAAC;QACvBH,UAAU,EAAEI,QAAQ,CAACJ,UAAU,EAAE,EAAE,CAAC;QACpCC,MAAM,EAAEI,UAAU,CAACJ,MAAM;MAC7B,CAAC;IACL,CAAC;;IAED;IACA,IAAIC,SAAQ,GAAInC,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,MAAMuC,eAAc,GAAKb,KAAK,IAAK;MAC/BrB,MAAM,CAACmC,IAAI,CAAC;QACRC,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE;UAAEhB,KAAK,EAAEiB,IAAI,CAACC,SAAS,CAAClB,KAAK;QAAE;MAC1C,CAAC,CAAC;IACN,CAAC;;IAED;IACA,MAAMmB,cAAa,GAAIA,CAAA,KAAM;MACzBxC,MAAM,CAACmC,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;;IAED;IACA,MAAMM,aAAY,GAAIA,CAAA,KAAM;MACxBzC,MAAM,CAACmC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,OAAO;MACHlC,WAAW;MACXC,YAAY;MACZC,iBAAiB;MACjBC,aAAa;MACbE,OAAO;MACPC,aAAa;MACb2B,eAAe;MACfM,cAAc;MACdC;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}