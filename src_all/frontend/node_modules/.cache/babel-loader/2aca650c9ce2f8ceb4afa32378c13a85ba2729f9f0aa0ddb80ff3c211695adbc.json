{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7c42b2ff\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"stars\",\n  ref: \"starsRef\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title_register\"\n}, \"注册\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"input1\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"用户名:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"input2\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"密码:\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"input3\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirmPassword\"\n}, \"确认密码:\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"注册\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.starsCount, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"star\",\n      key: index\n    });\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"form\", {\n    class: \"form\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.confirmPassword]])]), _hoisted_10, $setup.registerError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, _toDisplayString($setup.registerError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示注册错误信息 \"), $setup.output ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, _toDisplayString($setup.output), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 新增：显示从后端接收的输出 \")], 32 /* NEED_HYDRATION */), $setup.showLoginButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.goToLogin && $setup.goToLogin(...args))\n  }, \"返回登录页面\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","for","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","starsCount","item","index","onSubmit","_cache","_withModifiers","args","handleSubmit","_hoisted_3","_hoisted_4","_hoisted_5","id","$event","username","required","_hoisted_6","_hoisted_7","password","_hoisted_8","_hoisted_9","confirmPassword","_hoisted_10","registerError","_hoisted_11","_toDisplayString","_createCommentVNode","output","_hoisted_12","showLoginButton","onClick","goToLogin"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"register-container\">\r\n        <div class=\"stars\" ref=\"starsRef\">\r\n            <div class=\"star\" v-for=\"(item, index) in starsCount\" :key=\"index\"></div>\r\n        </div>\r\n        <form class=\"form\" @submit.prevent=\"handleSubmit\">\r\n            <h2 class=\"title_register\">注册</h2>\r\n            <div class=\"input1\">\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <div class=\"input2\">\r\n                <label for=\"password\">密码:</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n            </div>\r\n            <div class=\"input3\">\r\n                <label for=\"confirmPassword\">确认密码:</label>\r\n                <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n            </div>\r\n            <button type=\"submit\">注册</button>\r\n            <p v-if=\"registerError\">{{ registerError }}</p> <!-- 显示注册错误信息 -->\r\n            <p v-if=\"output\">{{ output }}</p> <!-- 新增：显示从后端接收的输出 -->\r\n        </form>\r\n        <button v-if=\"showLoginButton\" @click=\"goToLogin\">返回登录页面</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from \"vue\";\r\n\r\nexport default {\r\n    setup() {\r\n        const username = ref('');\r\n        const password = ref('');\r\n        const confirmPassword = ref('');\r\n        const registerError = ref(''); // 用于存储注册错误信息\r\n        const output = ref('');\r\n        const showLoginButton = ref(false); // 控制登录按钮显示的变量\r\n        const router = useRouter();\r\n\r\n        let starsRef = ref(null);\r\n\r\n        const starsCount = 800; //星星数量\r\n        const distance = 900; //间距\r\n\r\n        const handleSubmit = async () => {\r\n            if (password.value !== confirmPassword.value) {\r\n                registerError.value = '两次输入的密码不一致。';\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/api/register', {\r\n                    username: username.value,\r\n                    password: password.value\r\n                });\r\n                if (response.status === 200) {\r\n                    output.value = response.data; // 将后端返回的输出存储在 output 变量中\r\n                    // 注册成功处理\r\n                    if (response.data === '注册成功') {\r\n                        //alert('注册成功');\r\n                        //router.push('/login'); // 注册成功后跳转到登录页面\r\n                        showLoginButton.value = true; // 显示登录按钮\r\n                    }\r\n                    // 这里可以添加代码来处理注册成功的逻辑，如跳转到登录页面\r\n                }\r\n            } catch (error) {\r\n                // 网络或其他错误处理\r\n                registerError.value = '注册过程中发生错误。' + error.message;\r\n            }\r\n        };\r\n\r\n        const goToLogin = () => {\r\n            router.push('/login'); // 跳转到登录页面\r\n        };\r\n\r\n        onMounted(() => {\r\n            let starNodes = Array.from(starsRef.value.children);\r\n            starNodes.forEach((item) => {\r\n                let speed = 0.2 + Math.random() * 1;\r\n                let thisDistance = distance + Math.random() * 300;\r\n                item.style.transformOrigin = `0 0 ${thisDistance}px`;\r\n                item.style.transform = `\r\n                translate3d(0,0,-${thisDistance}px)\r\n                rotateY(${Math.random() * 360}deg)\r\n                rotateX(${Math.random() * -50}deg)\r\n                scale(${speed},${speed})`;\r\n            });\r\n        });\r\n\r\n        // 返回响应式引用供模板使用\r\n        return {\r\n            username,\r\n            password,\r\n            confirmPassword,\r\n            registerError,\r\n            output,\r\n            handleSubmit,\r\n            goToLogin,\r\n            showLoginButton,\r\n            starsRef,\r\n            starsCount,\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.title_register {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; /* 从视口顶部向下移动20% */\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  bottom: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -10%);\r\n  width: 750px;\r\n  height: 350px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.input1, .input2, .input3 {\r\n  align-items: center; /* 垂直居中 */\r\n  color: #fefefe;\r\n  font-size: 2.5em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif;\r\n  position: relative;\r\n  left: -10%;\r\n  margin: 0;\r\n  text-align: right; /* 这会让内部的input元素右对齐 */\r\n}\r\n\r\nlabel {\r\n  margin-right: 10px; /* 标签和输入框之间增加间距 */\r\n}\r\n\r\ninput {\r\n  height: 2em;\r\n  width: 55%;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  position: absolute;\r\n  font-size: 2em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n  \r\n}\r\n\r\n.register-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n@keyframes rotate {\r\n  0% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg) rotateY(0);\r\n  }\r\n  100% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg)\r\n      rotateY(-360deg);\r\n  }\r\n}\r\n.stars {\r\n  transform: perspective(500px);\r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  perspective-origin: 50% 100%;\r\n  left: 45%;\r\n  animation: rotate 90s infinite linear;\r\n  bottom: 0;\r\n}\r\n.star {\r\n  width: 2px;\r\n  height: 2px;\r\n  background: #f7f7b6;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  backface-visibility: hidden;\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAoB;;EACtBA,KAAK,EAAC,OAAO;EAACC,GAAG,EAAC;;gEAInBC,mBAAA,CAAkC;EAA9BF,KAAK,EAAC;AAAgB,GAAC,IAAE;;EACxBA,KAAK,EAAC;AAAQ;gEACfE,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;;EAGzBH,KAAK,EAAC;AAAQ;gEACfE,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAU,GAAC,KAAG;;EAGxBH,KAAK,EAAC;AAAQ;gEACfE,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAiB,GAAC,OAAK;iEAGtCD,mBAAA,CAAiC;EAAzBE,IAAI,EAAC;AAAQ,GAAC,IAAE;;EAnBpCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBFL,mBAAA,CAEM,OAFNM,UAEM,I,kBADFF,mBAAA,CAAyEG,SAAA,QAHrFC,WAAA,CAGsDC,MAAA,CAAAC,UAAU,EAHhE,CAGsCC,IAAI,EAAEC,KAAK;yBAArCR,mBAAA,CAAyE;MAApEN,KAAK,EAAC,MAAM;MAAsCK,GAAG,EAAES;;0DAEhEZ,mBAAA,CAiBO;IAjBDF,KAAK,EAAC,MAAM;IAAEe,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALlCC,cAAA,KAAAC,IAAA,KAK4CP,MAAA,CAAAQ,YAAA,IAAAR,MAAA,CAAAQ,YAAA,IAAAD,IAAA,CAAY;MAC5CE,UAAkC,EAClClB,mBAAA,CAGM,OAHNmB,UAGM,GAFFC,UAAkC,E,gBAClCpB,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACmB,EAAE,EAAC,UAAU;IAThD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAS0Db,MAAA,CAAAc,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAAVf,MAAA,CAAAc,QAAQ,E,KAEtDvB,mBAAA,CAGM,OAHNyB,UAGM,GAFFC,UAAiC,E,gBACjC1B,mBAAA,CAAiE;IAA1DE,IAAI,EAAC,UAAU;IAACmB,EAAE,EAAC,UAAU;IAbpD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAa8Db,MAAA,CAAAkB,QAAQ,GAAAL,MAAA;IAAEE,QAAQ,EAAR;iDAAVf,MAAA,CAAAkB,QAAQ,E,KAE1D3B,mBAAA,CAGM,OAHN4B,UAGM,GAFFC,UAA0C,E,gBAC1C7B,mBAAA,CAA+E;IAAxEE,IAAI,EAAC,UAAU;IAACmB,EAAE,EAAC,iBAAiB;IAjB3D,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAiBqEb,MAAA,CAAAqB,eAAe,GAAAR,MAAA;IAAEE,QAAQ,EAAR;iDAAjBf,MAAA,CAAAqB,eAAe,E,KAExEC,WAAiC,EACxBtB,MAAA,CAAAuB,aAAa,I,cAAtB5B,mBAAA,CAA+C,KApB3D6B,WAAA,EAAAC,gBAAA,CAoBuCzB,MAAA,CAAAuB,aAAa,oBApBpDG,mBAAA,gBAoB4DA,mBAAA,cAAiB,EACxD1B,MAAA,CAAA2B,MAAM,I,cAAfhC,mBAAA,CAAiC,KArB7CiC,WAAA,EAAAH,gBAAA,CAqBgCzB,MAAA,CAAA2B,MAAM,oBArBtCD,mBAAA,gBAqB8CA,mBAAA,mBAAsB,C,4BAE9C1B,MAAA,CAAA6B,eAAe,I,cAA7BlC,mBAAA,CAAiE;IAvBzED,GAAA;IAuBwCoC,OAAK,EAAAzB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEP,MAAA,CAAA+B,SAAA,IAAA/B,MAAA,CAAA+B,SAAA,IAAAxB,IAAA,CAAS;KAAE,QAAM,KAvBhEmB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}