{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'StudyTourDiary',\n  setup() {\n    const router = useRouter();\n    const searchTitle = ref('');\n    const searchAuthor = ref('');\n    const searchDescription = ref('');\n    const searchContent = ref('');\n    const sort = ref('1'); // 默认按照热度排序\n    const diaries = ref([]); // 存储日记列表\n    let currentDiary = ref({}); // 用于累积当前日记的数据\n\n    // 搜索日记\n    const fetchDiaries = async () => {\n      try {\n        const response = await axios.post('/api/diary-search', {\n          title: searchTitle.value || '-1',\n          author: searchAuthor.value || '-1',\n          description: searchDescription.value || '-1',\n          content: searchContent.value || '-1',\n          sort: sort.value\n        });\n        const list = response.data.list.split('\\n');\n        for (let i = 0; i < list.length; i++) {\n          if (i % 3 === 0) {\n            // 每三行是一个新日记的开始\n            if (currentDiary.value.title) {\n              // 如果当前日记已经存在，推入日记数组\n              diaries.value.push(currentDiary.value);\n            }\n            currentDiary.value = {\n              title: list[i].split(' ')[0],\n              // 标题\n              author: list[i].split(' ')[1],\n              // 作者\n              description: list[i].split(' ')[2],\n              // 描述对象\n              content: '',\n              // 内容将在下一行被填充\n              popularity: 0,\n              // 热度和评分将在第三行被填充\n              rating: 0\n            };\n          } else if (i % 3 === 1) {\n            // 第二行是日记内容\n            currentDiary.value.content = list[i].trim();\n          } else if (i % 3 === 2) {\n            // 第三行是热度和评分\n            const [popularity, rating] = list[i].split(' ');\n            currentDiary.value.popularity = parseInt(popularity, 10);\n            currentDiary.value.rating = parseFloat(rating);\n          }\n        }\n        // 推入最后一个日记到数组\n        if (currentDiary.value.title) {\n          diaries.value.push(currentDiary.value);\n        }\n      } catch (err) {\n        console.error('Error searching diaries:', err);\n      }\n    };\n    const searchDiaries = () => {\n      diaries.value = [];\n      fetchDiaries();\n    };\n\n    // 跳转到日记详情页面\n    const goToDiaryDetail = diary => {\n      router.push({\n        path: '/diary-detail',\n        query: {\n          diary: JSON.stringify(diary)\n        }\n      });\n    };\n\n    // 跳转到写日记页面\n    const goToWriteDiary = () => {\n      router.push('/write-diary');\n    };\n\n    // 跳转到首页\n    const goToDashboard = () => {\n      router.push('/dashboard');\n    };\n    return {\n      searchTitle,\n      searchAuthor,\n      searchDescription,\n      searchContent,\n      sort,\n      diaries,\n      searchDiaries,\n      goToDiaryDetail,\n      goToWriteDiary,\n      goToDashboard\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","setup","router","searchTitle","searchAuthor","searchDescription","searchContent","sort","diaries","currentDiary","fetchDiaries","response","post","title","value","author","description","content","list","data","split","i","length","push","popularity","rating","trim","parseInt","parseFloat","err","console","error","searchDiaries","goToDiaryDetail","diary","path","query","JSON","stringify","goToWriteDiary","goToDashboard"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\StudyTourDiary.vue"],"sourcesContent":["<!-- StudyTourDiary.vue -->\r\n<template>\r\n    <div class=\"study-tour-diary\">\r\n        <h1>游学日记</h1>\r\n        <button @click=\"goToDashboard\">返回首页</button>\r\n        <!-- 四个搜索框 -->\r\n        <div>\r\n            <input type=\"text\" v-model=\"searchTitle\" placeholder=\"搜索标题\">\r\n            <input type=\"text\" v-model=\"searchAuthor\" placeholder=\"搜索作者名\">\r\n            <input type=\"text\" v-model=\"searchDescription\" placeholder=\"搜索描述对象\">\r\n            <input type=\"text\" v-model=\"searchContent\" placeholder=\"搜索内容\">\r\n        </div>\r\n        <!-- 排序选择 -->\r\n        <div>\r\n            <label for=\"sort\">排序方式:</label>\r\n            <select id=\"sort\" v-model=\"sort\">\r\n                <option value='0'>热度</option>\r\n                <option value='1'>评分</option>\r\n            </select>\r\n        </div>\r\n        <!-- 搜索按钮 -->\r\n        <button @click=\"searchDiaries\">搜索</button>\r\n        <!-- 游学日记列表 -->\r\n        <ul v-if=\"diaries.length\" class=\"diary-list\">\r\n            <li v-for=\"diary in diaries\" :key=\"diary.title\" class=\"diary-item\">\r\n                <p>标题：{{ diary.title }}</p>\r\n                <p>作者：{{ diary.author }}</p>\r\n                <p>描述对象：{{ diary.description }}</p>\r\n                <p>热度：{{ diary.popularity }}</p>\r\n                <p>评分：{{ diary.rating }}</p>\r\n                <button @click=\"goToDiaryDetail(diary)\">详情</button>\r\n            </li>\r\n        </ul>\r\n        <p v-else>没有找到相关日记。</p>\r\n        <!-- 写日记按钮 -->\r\n        <button @click=\"goToWriteDiary\">写日记</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    name: 'StudyTourDiary',\r\n    setup() {\r\n        const router = useRouter();\r\n        const searchTitle = ref('');\r\n        const searchAuthor = ref('');\r\n        const searchDescription = ref('');\r\n        const searchContent = ref('');\r\n        const sort = ref('1'); // 默认按照热度排序\r\n        const diaries = ref([]); // 存储日记列表\r\n        let currentDiary = ref({}); // 用于累积当前日记的数据\r\n\r\n        // 搜索日记\r\n        const fetchDiaries = async () => {\r\n            try {\r\n                const response = await axios.post('/api/diary-search', {\r\n                    title: searchTitle.value || '-1',\r\n                    author: searchAuthor.value || '-1',\r\n                    description: searchDescription.value || '-1',\r\n                    content: searchContent.value || '-1',\r\n                    sort: sort.value,\r\n                });\r\n\r\n                const list = response.data.list.split('\\n');\r\n                for (let i = 0; i < list.length; i++) {\r\n                    if (i % 3 === 0) {\r\n                        // 每三行是一个新日记的开始\r\n                        if (currentDiary.value.title) {\r\n                            // 如果当前日记已经存在，推入日记数组\r\n                            diaries.value.push(currentDiary.value);\r\n                        }\r\n                        currentDiary.value = {\r\n                            title: list[i].split(' ')[0], // 标题\r\n                            author: list[i].split(' ')[1], // 作者\r\n                            description: list[i].split(' ')[2], // 描述对象\r\n                            content: '', // 内容将在下一行被填充\r\n                            popularity: 0, // 热度和评分将在第三行被填充\r\n                            rating: 0,\r\n                        };\r\n                    } else if (i % 3 === 1) {\r\n                        // 第二行是日记内容\r\n                        currentDiary.value.content = list[i].trim();\r\n                    } else if (i % 3 === 2) {\r\n                        // 第三行是热度和评分\r\n                        const [popularity, rating] = list[i].split(' ');\r\n                        currentDiary.value.popularity = parseInt(popularity, 10);\r\n                        currentDiary.value.rating = parseFloat(rating);\r\n                    }\r\n                }\r\n                // 推入最后一个日记到数组\r\n                if (currentDiary.value.title) {\r\n                    diaries.value.push(currentDiary.value);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error searching diaries:', err);\r\n            }\r\n        };\r\n\r\n        const searchDiaries = () => {\r\n            diaries.value = [];\r\n            fetchDiaries();\r\n        };\r\n\r\n        // 跳转到日记详情页面\r\n        const goToDiaryDetail = (diary) => {\r\n            router.push({\r\n                path: '/diary-detail',\r\n                query: { diary: JSON.stringify(diary) },\r\n            });\r\n        };\r\n\r\n        // 跳转到写日记页面\r\n        const goToWriteDiary = () => {\r\n            router.push('/write-diary');\r\n        };\r\n\r\n        // 跳转到首页\r\n        const goToDashboard = () => {\r\n            router.push('/dashboard');\r\n        };\r\n\r\n        return {\r\n            searchTitle,\r\n            searchAuthor,\r\n            searchDescription,\r\n            searchContent,\r\n            sort,\r\n            diaries,\r\n            searchDiaries,\r\n            goToDiaryDetail,\r\n            goToWriteDiary,\r\n            goToDashboard,\r\n        };\r\n    },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}