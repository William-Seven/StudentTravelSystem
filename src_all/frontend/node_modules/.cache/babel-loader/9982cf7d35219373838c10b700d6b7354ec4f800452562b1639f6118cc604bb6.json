{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7c42b2ff\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title_register\"\n}, \"注册\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"用户名:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"密码:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirmPassword\"\n}, \"确认密码:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"注册\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"form\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_2, _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.confirmPassword]])]), _hoisted_6, $setup.registerError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($setup.registerError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示注册错误信息 \"), $setup.output ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($setup.output), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 新增：显示从后端接收的输出 \")], 32 /* NEED_HYDRATION */), $setup.showLoginButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.goToLogin && $setup.goToLogin(...args))\n  }, \"返回登录页面\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","key","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$setup","handleSubmit","_hoisted_2","_hoisted_3","id","$event","username","required","_hoisted_4","password","_hoisted_5","confirmPassword","_hoisted_6","registerError","_hoisted_7","_toDisplayString","_createCommentVNode","output","_hoisted_8","showLoginButton","onClick","goToLogin"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"register-container\">\r\n        <form class=\"form\" @submit.prevent=\"handleSubmit\">\r\n            <h2 class=\"title_register\">注册</h2>\r\n            <div>\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">密码:</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"confirmPassword\">确认密码:</label>\r\n                <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n            </div>\r\n            <button type=\"submit\">注册</button>\r\n            <p v-if=\"registerError\">{{ registerError }}</p> <!-- 显示注册错误信息 -->\r\n            <p v-if=\"output\">{{ output }}</p> <!-- 新增：显示从后端接收的输出 -->\r\n        </form>\r\n        <button v-if=\"showLoginButton\" @click=\"goToLogin\">返回登录页面</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    setup() {\r\n        const username = ref('');\r\n        const password = ref('');\r\n        const confirmPassword = ref('');\r\n        const registerError = ref(''); // 用于存储注册错误信息\r\n        const output = ref('');\r\n        const showLoginButton = ref(false); // 控制登录按钮显示的变量\r\n        const router = useRouter();\r\n\r\n        const handleSubmit = async () => {\r\n            if (password.value !== confirmPassword.value) {\r\n                registerError.value = '两次输入的密码不一致。';\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/api/register', {\r\n                    username: username.value,\r\n                    password: password.value\r\n                });\r\n                if (response.status === 200) {\r\n                    output.value = response.data; // 将后端返回的输出存储在 output 变量中\r\n                    // 注册成功处理\r\n                    if (response.data === '注册成功') {\r\n                        //alert('注册成功');\r\n                        //router.push('/login'); // 注册成功后跳转到登录页面\r\n                        showLoginButton.value = true; // 显示登录按钮\r\n                    }\r\n                    // 这里可以添加代码来处理注册成功的逻辑，如跳转到登录页面\r\n                }\r\n            } catch (error) {\r\n                // 网络或其他错误处理\r\n                registerError.value = '注册过程中发生错误。' + error.message;\r\n            }\r\n        };\r\n\r\n        const goToLogin = () => {\r\n            router.push('/login'); // 跳转到登录页面\r\n        };\r\n\r\n        // 返回响应式引用供模板使用\r\n        return {\r\n            username,\r\n            password,\r\n            confirmPassword,\r\n            registerError,\r\n            output,\r\n            handleSubmit,\r\n            goToLogin,\r\n            showLoginButton\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.title_login {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; /* 从视口顶部向下移动20% */\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  bottom: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -10%);\r\n  width: 500px;\r\n  height: 350px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAoB;gEAEvBC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAgB,GAAC,IAAE;gEAEzBC,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;gEAI1BD,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAU,GAAC,KAAG;gEAIzBD,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAiB,GAAC,OAAK;gEAGtCD,mBAAA,CAAiC;EAAzBE,IAAI,EAAC;AAAQ,GAAC,IAAE;;EAhBpCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBFL,mBAAA,CAiBO;IAjBDD,KAAK,EAAC,MAAM;IAAEO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFlCC,cAAA,KAAAC,IAAA,KAE4CC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAC5CG,UAAkC,EAClCZ,mBAAA,CAGM,cAFFa,UAAkC,E,gBAClCb,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACY,EAAE,EAAC,UAAU;IANhD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAM0DL,MAAA,CAAAM,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAAVP,MAAA,CAAAM,QAAQ,E,KAEtDhB,mBAAA,CAGM,cAFFkB,UAAiC,E,gBACjClB,mBAAA,CAAiE;IAA1DE,IAAI,EAAC,UAAU;IAACY,EAAE,EAAC,UAAU;IAVpD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAU8DL,MAAA,CAAAS,QAAQ,GAAAJ,MAAA;IAAEE,QAAQ,EAAR;iDAAVP,MAAA,CAAAS,QAAQ,E,KAE1DnB,mBAAA,CAGM,cAFFoB,UAA0C,E,gBAC1CpB,mBAAA,CAA+E;IAAxEE,IAAI,EAAC,UAAU;IAACY,EAAE,EAAC,iBAAiB;IAd3D,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAcqEL,MAAA,CAAAW,eAAe,GAAAN,MAAA;IAAEE,QAAQ,EAAR;iDAAjBP,MAAA,CAAAW,eAAe,E,KAExEC,UAAiC,EACxBZ,MAAA,CAAAa,aAAa,I,cAAtBnB,mBAAA,CAA+C,KAjB3DoB,UAAA,EAAAC,gBAAA,CAiBuCf,MAAA,CAAAa,aAAa,oBAjBpDG,mBAAA,gBAiB4DA,mBAAA,cAAiB,EACxDhB,MAAA,CAAAiB,MAAM,I,cAAfvB,mBAAA,CAAiC,KAlB7CwB,UAAA,EAAAH,gBAAA,CAkBgCf,MAAA,CAAAiB,MAAM,oBAlBtCD,mBAAA,gBAkB8CA,mBAAA,mBAAsB,C,4BAE9ChB,MAAA,CAAAmB,eAAe,I,cAA7BzB,mBAAA,CAAiE;IApBzED,GAAA;IAoBwC2B,OAAK,EAAAvB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,MAAA,CAAAqB,SAAA,IAAArB,MAAA,CAAAqB,SAAA,IAAAtB,IAAA,CAAS;KAAE,QAAM,KApBhEiB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}