{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'StudyTourRecommendations',\n  setup() {\n    const recommendations = ref([]); // 存储后端发来的游学推荐信息\n    const filterType = ref('all'); // 筛选类型\n    const limit = ref('all'); // 展示数量限制\n    const sort = ref('default'); // 排序方式\n    const searchKeyword = ref(''); // 搜索关键字\n    const router = useRouter(); // vue-router\n\n    // 获取游学推荐数据\n    const fetchRecommendations = async () => {\n      try {\n        const bodyData = {\n          filterType: filterType.value,\n          limit: limit.value,\n          sort: sort.value,\n          searchKeyword: searchKeyword.value\n        };\n        const response = await axios.post('/api/recommendation', bodyData);\n        recommendations.value = response.data;\n      } catch (err) {\n        console.error('Error fetching recommendations:', err);\n      }\n      ;\n    };\n\n    // 跳转到描述页面\n    const goToDescription = () => {\n      router.push(`/description`);\n    };\n\n    // 初始化获取数据\n    fetchRecommendations();\n    return {\n      recommendations,\n      filterType,\n      limit,\n      sort,\n      searchKeyword,\n      goToDescription\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","setup","recommendations","filterType","limit","sort","searchKeyword","router","fetchRecommendations","bodyData","value","response","post","data","err","console","error","goToDescription","push"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\StudyTourRecommendations.vue"],"sourcesContent":["<!-- StudyTourRecommendations.vue -->\r\n<template>\r\n  <div class=\"study-tour-recommendations\">\r\n    <h1>游学推荐</h1>\r\n    <!-- 筛选选项 -->\r\n    <div class=\"filters\">\r\n      <select v-model=\"filterType\">\r\n        <option value=\"all\">全部</option>\r\n        <option value=\"scenic\">景区</option>\r\n        <option value=\"campus\">学校</option>\r\n      </select>\r\n      <select v-model=\"limit\">\r\n        <option value=\"all\">全部</option>\r\n        <option value=\"10\">前十</option>\r\n      </select>\r\n      <select v-model=\"sort\">\r\n        <option value=\"default\">默认排序</option>\r\n        <option value=\"popularity\">热度</option>\r\n        <option value=\"rating\">评分</option>\r\n      </select>\r\n    </div>\r\n    <!-- 搜索框 -->\r\n    <input type=\"text\" v-model=\"searchKeyword\" placeholder=\"搜索景区或学校\">\r\n    <button @click=\"search\">搜索</button>\r\n    <!-- 游学推荐列表 -->\r\n    <ul class=\"recommendations-list\">\r\n      <li v-for=\"item in filteredRecommendations\" :key=\"item.id\" class=\"recommendation-item\">\r\n        {{ item.name }}\r\n        <!-- 点击跳转到描述页面 -->\r\n        <button @click=\"goToDescription\">详情</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'StudyTourRecommendations',\r\n  setup() {\r\n    const recommendations = ref([]); // 存储后端发来的游学推荐信息\r\n    const filterType = ref('all'); // 筛选类型\r\n    const limit = ref('all'); // 展示数量限制\r\n    const sort = ref('default'); // 排序方式\r\n    const searchKeyword = ref(''); // 搜索关键字\r\n    const router = useRouter(); // vue-router\r\n\r\n    // 获取游学推荐数据\r\n    const fetchRecommendations = async () => {\r\n      try {\r\n          const bodyData = {\r\n            filterType: filterType.value,\r\n            limit: limit.value,\r\n              sort: sort.value,\r\n            searchKeyword: searchKeyword.value,\r\n          };\r\n\r\n        const response = await axios.post('/api/recommendation', bodyData);\r\n        recommendations.value = response.data;\r\n      } catch (err) {\r\n        console.error('Error fetching recommendations:', err);\r\n        };\r\n    };\r\n\r\n    // 跳转到描述页面\r\n    const goToDescription = () => {\r\n      router.push(`/description`);\r\n    };\r\n\r\n    // 初始化获取数据\r\n    fetchRecommendations();\r\n\r\n    return {\r\n      recommendations,\r\n      filterType,\r\n      limit,\r\n      sort,\r\n      searchKeyword,\r\n      goToDescription,\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";AAoCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,0BAA0B;EAChCC,KAAKA,CAAA,EAAG;IACN,MAAMC,eAAc,GAAIL,GAAG,CAAC,EAAE,CAAC,EAAE;IACjC,MAAMM,UAAS,GAAIN,GAAG,CAAC,KAAK,CAAC,EAAE;IAC/B,MAAMO,KAAI,GAAIP,GAAG,CAAC,KAAK,CAAC,EAAE;IAC1B,MAAMQ,IAAG,GAAIR,GAAG,CAAC,SAAS,CAAC,EAAE;IAC7B,MAAMS,aAAY,GAAIT,GAAG,CAAC,EAAE,CAAC,EAAE;IAC/B,MAAMU,MAAK,GAAIR,SAAS,CAAC,CAAC,EAAE;;IAE5B;IACA,MAAMS,oBAAmB,GAAI,MAAAA,CAAA,KAAY;MACvC,IAAI;QACA,MAAMC,QAAO,GAAI;UACfN,UAAU,EAAEA,UAAU,CAACO,KAAK;UAC5BN,KAAK,EAAEA,KAAK,CAACM,KAAK;UAChBL,IAAI,EAAEA,IAAI,CAACK,KAAK;UAClBJ,aAAa,EAAEA,aAAa,CAACI;QAC/B,CAAC;QAEH,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,qBAAqB,EAAEH,QAAQ,CAAC;QAClEP,eAAe,CAACQ,KAAI,GAAIC,QAAQ,CAACE,IAAI;MACvC,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;MACrD;MAAC;IACL,CAAC;;IAED;IACA,MAAMG,eAAc,GAAIA,CAAA,KAAM;MAC5BV,MAAM,CAACW,IAAI,CAAE,cAAa,CAAC;IAC7B,CAAC;;IAED;IACAV,oBAAoB,CAAC,CAAC;IAEtB,OAAO;MACLN,eAAe;MACfC,UAAU;MACVC,KAAK;MACLC,IAAI;MACJC,aAAa;MACbW;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}