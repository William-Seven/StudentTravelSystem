{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'PlaceQuery',\n  setup() {\n    const currentLocation = ref(''); // 当前位置\n    const searchRange = ref(200); // 查询范围，默认200米\n    const placeType = ref('all'); // 场所种类\n    const searchResults = ref([]); // 搜索结果\n    const router = useRouter(); // vue-router\n\n    // 搜索场所\n    const search = async () => {\n      try {\n        const response = await axios.post('/api/place-query', {\n          currentLocation: currentLocation.value,\n          searchRange: searchRange.value,\n          placeType: placeType.value\n        });\n        searchResults.value = response.data; // 假设后端返回的数据是数组格式\n      } catch (err) {\n        console.error('Error searching places:', err);\n      }\n    };\n\n    // 跳转到首页\n    const goToDashboard = () => {\n      router.push('/dashboard');\n    };\n    return {\n      currentLocation,\n      searchRange,\n      placeType,\n      searchResults,\n      search,\n      goToDashboard\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","setup","currentLocation","searchRange","placeType","searchResults","router","search","response","post","value","data","err","console","error","goToDashboard","push"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\PlaceQuery.vue"],"sourcesContent":["<!-- PlaceQuery.vue -->\r\n<template>\r\n    <div class=\"place-query\">\r\n        <h1>场所查询</h1>\r\n        <button @click=\"goToDashboard\">返回首页</button>\r\n        <!-- 当前位置输入 -->\r\n        <div>\r\n            <label for=\"currentLocation\">当前位置:</label>\r\n            <input type=\"text\" id=\"currentLocation\" v-model=\"currentLocation\" required>\r\n        </div>\r\n        <!-- 查询范围输入 -->\r\n        <div>\r\n            <label for=\"searchRange\">查询范围 (米):</label>\r\n            <!-- 用户可以输入自定义距离 -->\r\n            <input type=\"number\" id=\"searchRange\" v-model.number=\"searchRange\" min=\"0\" required>\r\n        </div>\r\n        <div>\r\n            <!-- 或者使用拖拽条选择距离范围 -->\r\n            <input type=\"range\" v-model.number=\"searchRange\" min=\"0\" max=\"5000\" step=\"10\">\r\n        </div>\r\n        <!-- 场所种类选择 -->\r\n        <div>\r\n            <label for=\"placeType\">场所种类:</label>\r\n            <select id=\"placeType\" v-model=\"placeType\">\r\n                <option value=\"all\">全部</option>\r\n                <option value=\"卫生间\">卫生间</option>\r\n                <option value=\"餐饮\">餐饮</option>\r\n                <option value=\"商店\">商店</option>\r\n                <option value=\"广播\">广播</option>\r\n                <option value=\"医务室\">医务室</option>\r\n                <option value=\"服务厅\">服务厅</option>\r\n            </select>\r\n        </div>\r\n        <!-- 搜索按钮 -->\r\n        <button @click=\"search\">查询</button>\r\n        <!-- 搜索结果列表 -->\r\n        <ul v-if=\"searchResults.length\" class=\"search-results\">\r\n            <li v-for=\"result in searchResults\" :key=\"result.id\" class=\"result-item\">\r\n                <p>名称：{{ result.name }}</p>\r\n                <p>类型：{{ result.type }}</p>\r\n                <p>距离：{{ result.distance }} 米</p>\r\n            </li>\r\n        </ul>\r\n        <p v-else>没有找到相关场所。</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    name: 'PlaceQuery',\r\n    setup() {\r\n        const currentLocation = ref(''); // 当前位置\r\n        const searchRange = ref(200); // 查询范围，默认200米\r\n        const placeType = ref('all'); // 场所种类\r\n        const searchResults = ref([]); // 搜索结果\r\n        const router = useRouter(); // vue-router\r\n\r\n        // 搜索场所\r\n        const search = async () => {\r\n            try {\r\n                const response = await axios.post('/api/place-query', {\r\n                    currentLocation: currentLocation.value,\r\n                    searchRange: searchRange.value,\r\n                    placeType: placeType.value,\r\n                });\r\n                searchResults.value = response.data; // 假设后端返回的数据是数组格式\r\n            } catch (err) {\r\n                console.error('Error searching places:', err);\r\n            }\r\n        };\r\n\r\n        // 跳转到首页\r\n        const goToDashboard = () => {\r\n            router.push('/dashboard');\r\n        };\r\n\r\n        return {\r\n            currentLocation,\r\n            searchRange,\r\n            placeType,\r\n            searchResults,\r\n            search,\r\n            goToDashboard,\r\n        };\r\n    },\r\n};\r\n</script>"],"mappings":";AAgDA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACJ,MAAMC,eAAc,GAAIL,GAAG,CAAC,EAAE,CAAC,EAAE;IACjC,MAAMM,WAAU,GAAIN,GAAG,CAAC,GAAG,CAAC,EAAE;IAC9B,MAAMO,SAAQ,GAAIP,GAAG,CAAC,KAAK,CAAC,EAAE;IAC9B,MAAMQ,aAAY,GAAIR,GAAG,CAAC,EAAE,CAAC,EAAE;IAC/B,MAAMS,MAAK,GAAIP,SAAS,CAAC,CAAC,EAAE;;IAE5B;IACA,MAAMQ,MAAK,GAAI,MAAAA,CAAA,KAAY;MACvB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,kBAAkB,EAAE;UAClDP,eAAe,EAAEA,eAAe,CAACQ,KAAK;UACtCP,WAAW,EAAEA,WAAW,CAACO,KAAK;UAC9BN,SAAS,EAAEA,SAAS,CAACM;QACzB,CAAC,CAAC;QACFL,aAAa,CAACK,KAAI,GAAIF,QAAQ,CAACG,IAAI,EAAE;MACzC,EAAE,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MACjD;IACJ,CAAC;;IAED;IACA,MAAMG,aAAY,GAAIA,CAAA,KAAM;MACxBT,MAAM,CAACU,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,OAAO;MACHd,eAAe;MACfC,WAAW;MACXC,SAAS;MACTC,aAAa;MACbE,MAAM;MACNQ;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}