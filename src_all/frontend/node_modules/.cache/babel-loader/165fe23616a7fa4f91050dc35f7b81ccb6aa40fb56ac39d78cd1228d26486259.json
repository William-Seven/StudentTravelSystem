{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f8250bd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"stars\",\n  ref: \"starsRef\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title_login\"\n}, \"登录\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"form1\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"用户名:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"form2\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"密码:\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"login_button\",\n  type: \"submit\"\n}, \"登录\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.starsCount, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"star\",\n      key: index\n    });\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"form\", {\n    class: \"form\",\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_3, _createElementVNode(\"button\", {\n    class: \"change_password\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goToChangePassword && $setup.goToChangePassword(...args))\n  }, \" 修改密码 \"), _createElementVNode(\"button\", {\n    class: \"forget_password\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.goToForgotPassword && $setup.goToForgotPassword(...args))\n  }, \" 忘记密码 \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]])]), _hoisted_8, $setup.loginError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_9, _toDisplayString($setup.loginError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示登录错误信息 \"), $setup.output ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString($setup.output), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 新增：显示从后端接收的输出 \")], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","for","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","starsCount","item","index","onSubmit","_cache","_withModifiers","args","handleSubmit","_hoisted_3","onClick","goToChangePassword","goToForgotPassword","_hoisted_4","_hoisted_5","id","$event","username","required","_hoisted_6","_hoisted_7","password","_hoisted_8","loginError","_hoisted_9","_toDisplayString","_createCommentVNode","output","_hoisted_10"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"stars\" ref=\"starsRef\">\r\n      <div class=\"star\" v-for=\"(item, index) in starsCount\" :key=\"index\"></div>\r\n    </div>\r\n    <form class=\"form\" @submit.prevent=\"handleSubmit\">\r\n      <h2 class=\"title_login\">登录</h2>\r\n      <button class=\"change_password\" @click=\"goToChangePassword\">\r\n        修改密码\r\n      </button>\r\n      <button class=\"forget_password\" @click=\"goToForgotPassword\">\r\n        忘记密码\r\n      </button>\r\n      <div class=\"form1\" >\r\n        <label for=\"username\">用户名:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n      </div>\r\n      <div class=\"form2\" >\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button class=\"login_button\" type=\"submit\">登录</button>\r\n      <p v-if=\"loginError\">{{ loginError }}</p> <!-- 显示登录错误信息 -->\r\n      <p v-if=\"output\">{{ output }}</p> <!-- 新增：显示从后端接收的输出 -->\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    // 登录相关的响应式引用和方法\r\n    const username = ref('');\r\n    const password = ref('');\r\n    const loginError = ref(''); // 用于存储登录错误信息\r\n    const output = ref('');    // 存储后端发来的信息\r\n    const router = useRouter();\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/login', {\r\n          username: username.value,\r\n          password: password.value\r\n        });\r\n        if (response.status === 200) {\r\n          output.value = response.data; // 将后端返回的输出存储在 output 变量中\r\n          if (output.value === '登录成功') {\r\n            alert('登录成功');\r\n            router.push('/dashboard');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // 网络或其他错误处理\r\n        loginError.value = '登录过程中发生错误。';\r\n      }\r\n    };\r\n\r\n    const goToForgotPassword = () => {\r\n      router.push('/forgot-password');\r\n    };\r\n\r\n    const goToChangePassword = () => {\r\n      router.push('/change-password');\r\n    };\r\n\r\n    // 星空效果相关的响应式引用和方法\r\n    let starsRef = ref(null);\r\n    const starsCount = 800; // 星星数量\r\n    const distance = 900; // 间距\r\n\r\n    onMounted(() => {\r\n      let starNodes = Array.from(starsRef.value.children);\r\n      starNodes.forEach((item) => {\r\n        let speed = 0.2 + Math.random() * 1;\r\n        let thisDistance = distance + Math.random() * 300;\r\n        item.style.transformOrigin = `0 0 ${thisDistance}px`;\r\n        item.style.transform = `\r\n        translate3d(0,0,-${thisDistance}px)\r\n        rotateY(${Math.random() * 360}deg)\r\n        rotateX(${Math.random() * -50}deg)\r\n        scale(${speed},${speed})`;\r\n      });\r\n    });\r\n\r\n    // 返回所有响应式引用和方法供模板使用\r\n    return {\r\n      username,\r\n      password,\r\n      loginError,\r\n      output,\r\n      handleSubmit,\r\n      goToForgotPassword,\r\n      goToChangePassword,\r\n      starsRef,\r\n      starsCount,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.title_login {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; /* 从视口顶部向下移动20% */\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  bottom: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -10%);\r\n  width: 500px;\r\n  height: 350px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.form1, .form2 {\r\n  align-items: center; /* 垂直居中 */\r\n  color: #fefefe;\r\n  font-size: 2.5em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif;\r\n  position: relative;\r\n  left: 10%;\r\n  margin: 0;\r\n  text-align: right; /* 这会让内部的input元素右对齐 */\r\n}\r\n\r\nlabel {\r\n  margin-right: 10px; /* 标签和输入框之间增加间距 */\r\n}\r\n\r\ninput {\r\n  height: 2em;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  position: absolute;\r\n  font-size: 2em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n}\r\n\r\n.change_password {\r\n  position: absolute;\r\n  bottom: 10%;\r\n  left: 20%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n}\r\n\r\n.forget_password {\r\n  position: absolute;\r\n  bottom: 10%;\r\n  right: -5%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n}\r\n\r\n.login_button {\r\n  position: absolute;\r\n  bottom: 25%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  width: 85%;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #56cfcf;\r\n}\r\n\r\n.login-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n@keyframes rotate {\r\n  0% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg) rotateY(0);\r\n  }\r\n  100% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg)\r\n      rotateY(-360deg);\r\n  }\r\n}\r\n.stars {\r\n  transform: perspective(500px);\r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  perspective-origin: 50% 100%;\r\n  left: 45%;\r\n  animation: rotate 90s infinite linear;\r\n  bottom: 0;\r\n}\r\n.star {\r\n  width: 2px;\r\n  height: 2px;\r\n  background: #f7f7b6;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  backface-visibility: hidden;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC,OAAO;EAACC,GAAG,EAAC;;gEAIrBC,mBAAA,CAA+B;EAA3BF,KAAK,EAAC;AAAa,GAAC,IAAE;;EAOrBA,KAAK,EAAC;AAAO;gEAChBE,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;;EAGvBH,KAAK,EAAC;AAAO;gEAChBE,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAU,GAAC,KAAG;gEAG3BD,mBAAA,CAAsD;EAA9CF,KAAK,EAAC,cAAc;EAACI,IAAI,EAAC;GAAS,IAAE;;EArBnDC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJL,mBAAA,CAEM,OAFNM,UAEM,I,kBADJF,mBAAA,CAAyEG,SAAA,QAH/EC,WAAA,CAGgDC,MAAA,CAAAC,UAAU,EAH1D,CAGgCC,IAAI,EAAEC,KAAK;yBAArCR,mBAAA,CAAyE;MAApEN,KAAK,EAAC,MAAM;MAAsCK,GAAG,EAAES;;0DAE9DZ,mBAAA,CAmBO;IAnBDF,KAAK,EAAC,MAAM;IAAEe,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAL9BC,cAAA,KAAAC,IAAA,KAKwCP,MAAA,CAAAQ,YAAA,IAAAR,MAAA,CAAAQ,YAAA,IAAAD,IAAA,CAAY;MAC9CE,UAA+B,EAC/BlB,mBAAA,CAES;IAFDF,KAAK,EAAC,iBAAiB;IAAEqB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEP,MAAA,CAAAW,kBAAA,IAAAX,MAAA,CAAAW,kBAAA,IAAAJ,IAAA,CAAkB;KAAE,QAE5D,GACAhB,mBAAA,CAES;IAFDF,KAAK,EAAC,iBAAiB;IAAEqB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEP,MAAA,CAAAY,kBAAA,IAAAZ,MAAA,CAAAY,kBAAA,IAAAL,IAAA,CAAkB;KAAE,QAE5D,GACAhB,mBAAA,CAGM,OAHNsB,UAGM,GAFJC,UAAkC,E,gBAClCvB,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACsB,EAAE,EAAC,UAAU;IAfxC,uBAAAV,MAAA,QAAAA,MAAA,MAAAW,MAAA,IAekDhB,MAAA,CAAAiB,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAAVlB,MAAA,CAAAiB,QAAQ,E,KAEpD1B,mBAAA,CAGM,OAHN4B,UAGM,GAFJC,UAAiC,E,gBACjC7B,mBAAA,CAAiE;IAA1DE,IAAI,EAAC,UAAU;IAACsB,EAAE,EAAC,UAAU;IAnB5C,uBAAAV,MAAA,QAAAA,MAAA,MAAAW,MAAA,IAmBsDhB,MAAA,CAAAqB,QAAQ,GAAAL,MAAA;IAAEE,QAAQ,EAAR;iDAAVlB,MAAA,CAAAqB,QAAQ,E,KAExDC,UAAsD,EAC7CtB,MAAA,CAAAuB,UAAU,I,cAAnB5B,mBAAA,CAAyC,KAtB/C6B,UAAA,EAAAC,gBAAA,CAsB8BzB,MAAA,CAAAuB,UAAU,oBAtBxCG,mBAAA,gBAsBgDA,mBAAA,cAAiB,EAClD1B,MAAA,CAAA2B,MAAM,I,cAAfhC,mBAAA,CAAiC,KAvBvCiC,WAAA,EAAAH,gBAAA,CAuB0BzB,MAAA,CAAA2B,MAAM,oBAvBhCD,mBAAA,gBAuBwCA,mBAAA,mBAAsB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}