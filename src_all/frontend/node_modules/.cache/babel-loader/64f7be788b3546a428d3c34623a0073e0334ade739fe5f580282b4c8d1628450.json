{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { onMounted } from \"vue\";\nexport default {\n  name: 'myForgotPassword',\n  setup() {\n    const username = ref('');\n    const error = ref(''); // 用于存储错误信息\n    const output = ref(''); // 用于存储成功消息或其他信息\n    const showLoginButton = ref(false); // 控制登录按钮显示的变量\n    const router = useRouter(); // 创建 router 实例\n\n    let starsRef = ref(null);\n    const starsCount = 800; //星星数量\n    const distance = 900; //间距\n\n    const handleForgotPassword = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/api/forgot-password', {\n          username: username.value\n        });\n        if (response.status === 200) {\n          // 处理找回密码成功的逻辑\n          output.value = response.data;\n          if (output.value !== '用户名不存在！') {\n            showLoginButton.value = true; // 显示登录按钮\n          }\n        }\n      } catch (error) {\n        // 网络或其他错误处理\n        error.value = '找回密码过程中发生错误：' + error.message;\n      }\n    };\n    const goToLogin = () => {\n      router.push('/login'); // 导航到登录页面\n    };\n    onMounted(() => {\n      let starNodes = Array.from(starsRef.value.children);\n      starNodes.forEach(item => {\n        let speed = 0.2 + Math.random() * 1;\n        let thisDistance = distance + Math.random() * 300;\n        item.style.transformOrigin = `0 0 ${thisDistance}px`;\n        item.style.transform = `\n                translate3d(0,0,-${thisDistance}px)\n                rotateY(${Math.random() * 360}deg)\n                rotateX(${Math.random() * -50}deg)\n                scale(${speed},${speed})`;\n      });\n    });\n\n    // 返回响应式引用供模板使用\n    return {\n      username,\n      error,\n      output,\n      showLoginButton,\n      handleForgotPassword,\n      goToLogin,\n      starsRef,\n      starsCount\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","useRouter","onMounted","name","setup","username","error","output","showLoginButton","router","starsRef","starsCount","distance","handleForgotPassword","response","post","value","status","data","message","goToLogin","push","starNodes","Array","from","children","forEach","item","speed","Math","random","thisDistance","style","transformOrigin","transform"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myForgotPassword.vue"],"sourcesContent":["<!-- myForgotPassword.vue -->\r\n<template>\r\n    <div class=\"forgot-password-container\">\r\n        <div class=\"stars\" ref=\"starsRef\">\r\n            <div class=\"star\" v-for=\"(item, index) in starsCount\" :key=\"index\"></div>\r\n        </div>\r\n        <form class=\"form\" @submit.prevent=\"handleForgotPassword\">\r\n            <h2 class=\"title\">找回密码</h2>\r\n            <div class=\"input\">\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <button class=\"submit_button\" type=\"submit\">找回密码</button>\r\n            <p class=\"return_message1\" v-if=\"error\">{{ error }}</p> <!-- 显示错误信息 -->\r\n            <p class=\"return_message2\" v-if=\"output\">{{ output }}</p> <!-- 显示成功消息或其他信息 -->\r\n            <button class=\"return\" v-if=\"showLoginButton\" @click=\"goToLogin\">返回登录页面</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from \"vue\";\r\n\r\nexport default {\r\n    name: 'myForgotPassword',\r\n    setup() {\r\n        const username = ref('');\r\n        const error = ref(''); // 用于存储错误信息\r\n        const output = ref(''); // 用于存储成功消息或其他信息\r\n        const showLoginButton = ref(false); // 控制登录按钮显示的变量\r\n        const router = useRouter(); // 创建 router 实例\r\n\r\n        let starsRef = ref(null);\r\n\r\n        const starsCount = 800; //星星数量\r\n        const distance = 900; //间距\r\n\r\n        const handleForgotPassword = async () => {\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/api/forgot-password', {\r\n                    username: username.value\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    // 处理找回密码成功的逻辑\r\n                    output.value = response.data;\r\n                    if (output.value !== '用户名不存在！') {\r\n                        showLoginButton.value = true; // 显示登录按钮\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // 网络或其他错误处理\r\n                error.value = '找回密码过程中发生错误：' + error.message;\r\n            }\r\n        };\r\n\r\n        const goToLogin = () => {\r\n            router.push('/login'); // 导航到登录页面\r\n        };\r\n\r\n        onMounted(() => {\r\n            let starNodes = Array.from(starsRef.value.children);\r\n            starNodes.forEach((item) => {\r\n                let speed = 0.2 + Math.random() * 1;\r\n                let thisDistance = distance + Math.random() * 300;\r\n                item.style.transformOrigin = `0 0 ${thisDistance}px`;\r\n                item.style.transform = `\r\n                translate3d(0,0,-${thisDistance}px)\r\n                rotateY(${Math.random() * 360}deg)\r\n                rotateX(${Math.random() * -50}deg)\r\n                scale(${speed},${speed})`;\r\n            });\r\n        });\r\n        \r\n        // 返回响应式引用供模板使用\r\n        return {\r\n            username,\r\n            error,\r\n            output,\r\n            showLoginButton,\r\n            handleForgotPassword,\r\n            goToLogin,\r\n            starsRef,\r\n            starsCount,\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.title {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; /* 从视口顶部向下移动20% */\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  bottom: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, 20%);\r\n  width: 750px;\r\n  height: 500px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.input {\r\n  align-items: center; /* 垂直居中 */\r\n  color: #fefefe;\r\n  font-size: 2.5em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif;\r\n  position: relative;\r\n  left: -10%;\r\n  margin: 0;\r\n  text-align: right; /* 这会让内部的input元素右对齐 */\r\n}\r\n\r\nlabel {\r\n  margin-right: 10px; /* 标签和输入框之间增加间距 */\r\n}\r\n\r\ninput {\r\n  height: 2em;\r\n  width: 55%;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  position: absolute;\r\n  font-size: 2em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n}\r\n\r\n.submit_button {\r\n  position: absolute;\r\n  bottom: 20%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  width: 30%;\r\n}\r\n\r\n.return {\r\n  position: absolute;\r\n  bottom: 10%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  width:30%;\r\n  cursor: pointer;\r\n}\r\n\r\n.return_message1, .return_message2 {\r\n  color: #fefefe;\r\n  font-size: 2em; /* 设置字号大小 */\r\n  margin:1em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.return_message1 {\r\n  bottom: 10%;\r\n}\r\n\r\n.return_message2 {\r\n  bottom: 5%;\r\n}\r\n\r\n.forgot-password-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n@keyframes rotate {\r\n  0% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg) rotateY(0);\r\n  }\r\n  100% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg)\r\n      rotateY(-360deg);\r\n  }\r\n}\r\n.stars {\r\n  transform: perspective(500px);\r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  perspective-origin: 50% 100%;\r\n  left: 45%;\r\n  animation: rotate 90s infinite linear;\r\n  bottom: 0;\r\n}\r\n.star {\r\n  width: 2px;\r\n  height: 2px;\r\n  background: #f7f7b6;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  backface-visibility: hidden;\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,SAAQ,QAAS,KAAK;AAE/B,eAAe;EACXC,IAAI,EAAE,kBAAkB;EACxBC,KAAKA,CAAA,EAAG;IACJ,MAAMC,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC,EAAE;IACvB,MAAMO,MAAK,GAAIP,GAAG,CAAC,EAAE,CAAC,EAAE;IACxB,MAAMQ,eAAc,GAAIR,GAAG,CAAC,KAAK,CAAC,EAAE;IACpC,MAAMS,MAAK,GAAIR,SAAS,CAAC,CAAC,EAAE;;IAE5B,IAAIS,QAAO,GAAIV,GAAG,CAAC,IAAI,CAAC;IAExB,MAAMW,UAAS,GAAI,GAAG,EAAE;IACxB,MAAMC,QAAO,GAAI,GAAG,EAAE;;IAEtB,MAAMC,oBAAmB,GAAI,MAAAA,CAAA,KAAY;MACrC,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,2CAA2C,EAAE;UAC3EV,QAAQ,EAAEA,QAAQ,CAACW;QACvB,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UACzB;UACAV,MAAM,CAACS,KAAI,GAAIF,QAAQ,CAACI,IAAI;UAC5B,IAAIX,MAAM,CAACS,KAAI,KAAM,SAAS,EAAE;YAC5BR,eAAe,CAACQ,KAAI,GAAI,IAAI,EAAE;UAClC;QACJ;MACJ,EAAE,OAAOV,KAAK,EAAE;QACZ;QACAA,KAAK,CAACU,KAAI,GAAI,cAAa,GAAIV,KAAK,CAACa,OAAO;MAChD;IACJ,CAAC;IAED,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACpBX,MAAM,CAACY,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC3B,CAAC;IAEDnB,SAAS,CAAC,MAAM;MACZ,IAAIoB,SAAQ,GAAIC,KAAK,CAACC,IAAI,CAACd,QAAQ,CAACM,KAAK,CAACS,QAAQ,CAAC;MACnDH,SAAS,CAACI,OAAO,CAAEC,IAAI,IAAK;QACxB,IAAIC,KAAI,GAAI,GAAE,GAAIC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC;QACnC,IAAIC,YAAW,GAAInB,QAAO,GAAIiB,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG;QACjDH,IAAI,CAACK,KAAK,CAACC,eAAc,GAAK,OAAMF,YAAa,IAAG;QACpDJ,IAAI,CAACK,KAAK,CAACE,SAAQ,GAAI;mCACJH,YAAa;0BACtBF,IAAI,CAACC,MAAM,CAAC,IAAI,GAAI;0BACpBD,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC,EAAG;wBACtBF,KAAM,IAAGA,KAAM,GAAE;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;;IAEF;IACA,OAAO;MACHvB,QAAQ;MACRC,KAAK;MACLC,MAAM;MACNC,eAAe;MACfK,oBAAoB;MACpBO,SAAS;MACTV,QAAQ;MACRC;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}