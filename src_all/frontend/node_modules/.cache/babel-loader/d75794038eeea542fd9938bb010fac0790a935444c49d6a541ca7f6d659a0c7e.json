{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"forgot-password-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"找回密码\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"用户名:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"找回密码\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.handleForgotPassword && $setup.handleForgotPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]])]), _hoisted_4, $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示错误信息 \"), $setup.output ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($setup.output), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示成功消息或其他信息 \")], 32 /* NEED_HYDRATION */), $setup.showLoginButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.goToLogin && $setup.goToLogin(...args))\n  }, \"返回登录页面\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","key","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","handleForgotPassword","_hoisted_3","id","$event","username","required","_hoisted_4","error","_hoisted_5","_toDisplayString","_createCommentVNode","output","_hoisted_6","showLoginButton","onClick","goToLogin"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myForgotPassword.vue"],"sourcesContent":["<!-- myForgotPassword.vue -->\r\n<template>\r\n    <div class=\"forgot-password-container\">\r\n        <h2>找回密码</h2>\r\n        <form @submit.prevent=\"handleForgotPassword\">\r\n            <div>\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <button type=\"submit\">找回密码</button>\r\n            <p v-if=\"error\">{{ error }}</p> <!-- 显示错误信息 -->\r\n            <p v-if=\"output\">{{ output }}</p> <!-- 显示成功消息或其他信息 -->\r\n        </form>\r\n        <button v-if=\"showLoginButton\" @click=\"goToLogin\">返回登录页面</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    name: 'myForgotPassword',\r\n    setup() {\r\n        const username = ref('');\r\n        const error = ref(''); // 用于存储错误信息\r\n        const output = ref(''); // 用于存储成功消息或其他信息\r\n        const showLoginButton = ref(false); // 控制登录按钮显示的变量\r\n        const router = useRouter(); // 创建 router 实例\r\n\r\n        const handleForgotPassword = async () => {\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/api/forgot-password', {\r\n                    username: username.value\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    // 处理找回密码成功的逻辑\r\n                    output.value = response.data;\r\n                    if (output.value !== '用户名不存在！') {\r\n                        showLoginButton.value = true; // 显示登录按钮\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // 网络或其他错误处理\r\n                error.value = '找回密码过程中发生错误：' + error.message;\r\n            }\r\n        };\r\n\r\n        const goToLogin = () => {\r\n            router.push('/login'); // 导航到登录页面\r\n        };\r\n\r\n        // 返回响应式引用供模板使用\r\n        return {\r\n            username,\r\n            error,\r\n            output,\r\n            showLoginButton,\r\n            handleForgotPassword,\r\n            goToLogin\r\n        };\r\n    }\r\n};\r\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAA2B;gCAClCC,mBAAA,CAAa,YAAT,MAAI;gCAGAA,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;gCAG9BD,mBAAA,CAAmC;EAA3BE,IAAI,EAAC;AAAQ,GAAC,MAAI;;EATtCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBAEIC,mBAAA,CAYM,OAZNC,UAYM,GAXFC,UAAa,EACbN,mBAAA,CAQO;IARAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJrBC,cAAA,KAAAC,IAAA,KAI+BC,MAAA,CAAAC,oBAAA,IAAAD,MAAA,CAAAC,oBAAA,IAAAF,IAAA,CAAoB;MACvCV,mBAAA,CAGM,cAFFa,UAAkC,E,gBAClCb,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACY,EAAE,EAAC,UAAU;IAPhD,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAO0DJ,MAAA,CAAAK,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAAVN,MAAA,CAAAK,QAAQ,E,KAEtDE,UAAmC,EAC1BP,MAAA,CAAAQ,KAAK,I,cAAdf,mBAAA,CAA+B,KAV3CgB,UAAA,EAAAC,gBAAA,CAU+BV,MAAA,CAAAQ,KAAK,oBAVpCG,mBAAA,gBAU4CA,mBAAA,YAAe,EACtCX,MAAA,CAAAY,MAAM,I,cAAfnB,mBAAA,CAAiC,KAX7CoB,UAAA,EAAAH,gBAAA,CAWgCV,MAAA,CAAAY,MAAM,oBAXtCD,mBAAA,gBAW8CA,mBAAA,iBAAoB,C,4BAE5CX,MAAA,CAAAc,eAAe,I,cAA7BrB,mBAAA,CAAiE;IAbzED,GAAA;IAawCuB,OAAK,EAAAlB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,MAAA,CAAAgB,SAAA,IAAAhB,MAAA,CAAAgB,SAAA,IAAAjB,IAAA,CAAS;KAAE,QAAM,KAbhEY,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}