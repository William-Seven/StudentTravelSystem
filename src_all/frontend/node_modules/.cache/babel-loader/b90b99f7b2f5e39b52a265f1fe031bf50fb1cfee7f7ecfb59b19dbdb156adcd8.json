{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"欢迎来到学生游学系统\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", null, \"登录\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createCommentVNode(\" 如果用户未登录，则显示登录按钮 \"), !$setup.isLoggedIn ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 0,\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 如果用户已登录，则显示欢迎信息 \"), _createElementVNode(\"div\", null, \" 欢迎, \" + _toDisplayString($setup.username) + \"! \", 1 /* TEXT */)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" 其他内容 \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","$setup","isLoggedIn","_createBlock","_component_router_link","key","to","default","_withCtx","_hoisted_3","_","_Fragment","_toDisplayString","username"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\vue\\frontend\\src\\views\\myHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <h1>欢迎来到学生游学系统</h1>\r\n    <!-- 如果用户未登录，则显示登录按钮 -->\r\n    <router-link to=\"/login\" v-if=\"!isLoggedIn\">\r\n      <button>登录</button>\r\n    </router-link>\r\n    <!-- 如果用户已登录，则显示欢迎信息 -->\r\n    <div v-else>\r\n      欢迎, {{ username }}!\r\n    </div>\r\n    <!-- 其他内容 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    const isLoggedIn = ref(false); // 默认用户未登录\r\n    const username = ref(''); // 用户名初始为空\r\n    const router = useRouter();\r\n\r\n    // 这里仅为示例，您需要根据实际逻辑来检测用户登录状态\r\n    // 例如，从localStorage或者通过API获取\r\n    function checkLoginStatus() {\r\n      // 假设我们检查localStorage中是否有用户token\r\n      const userToken = localStorage.getItem('userToken');\r\n      if (userToken) {\r\n        isLoggedIn.value = true;\r\n        // 假设我们从token中获取用户名\r\n        username.value = '用户名'; // 这里应替换为实际用户名\r\n      }\r\n    }\r\n\r\n    checkLoginStatus(); // 初始检查登录状态\r\n\r\n    // 可以在适当的时机调用这个方法来检查登录状态\r\n    // 例如，组件挂载时或页面刷新时\r\n\r\n    return {\r\n      isLoggedIn,\r\n      username,\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;gCACfC,mBAAA,CAAmB,YAAf,YAAU;gCAGZA,mBAAA,CAAmB,gBAAX,IAAE;;;uBAJdC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAAmB,EACnBC,mBAAA,qBAAwB,E,CACQC,MAAA,CAAAC,UAAU,I,cAA1CC,YAAA,CAEcC,sBAAA;IANlBC,GAAA;IAIiBC,EAAE,EAAC;;IAJpBC,OAAA,EAAAC,QAAA,CAKM,MAAmB,CAAnBC,UAAmB,C;IALzBC,CAAA;uBAQIb,mBAAA,CAEMc,SAAA;IAVVN,GAAA;EAAA,IAOIL,mBAAA,qBAAwB,EACxBJ,mBAAA,CAEM,aAFM,OACN,GAAAgB,gBAAA,CAAGX,MAAA,CAAAY,QAAQ,IAAG,IACpB,gB,mDACAb,mBAAA,UAAa,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}