{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-271bca0e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"route-planner\"\n};\nconst _hoisted_2 = {\n  class: \"form1\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"路线规划\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"subtitle\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"walk\"\n}, \"步行\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0,\n  value: \"ebike\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  value: \"bike\"\n};\nconst _hoisted_10 = [\"onUpdate:modelValue\"];\nconst _hoisted_11 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"route-info\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"subtitle2\"\n}, \"路线信息:\", -1 /* HOISTED */));\nconst _hoisted_14 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", _hoisted_2, [_hoisted_3, _createElementVNode(\"button\", {\n    class: \"return_button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goToDashboard && $setup.goToDashboard(...args))\n  }, \"返回首页\"), _createCommentVNode(\" 选择景区或校园 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    class: \"scenic_button\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.selectArea('scenic'))\n  }, \"景区\"), _createElementVNode(\"button\", {\n    class: \"campus_button\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.selectArea('campus'))\n  }, \"校园\")]), _createCommentVNode(\" 根据选择显示不同的输入框 \"), _createCommentVNode(\" 切换点对点和多途径点 \"), $setup.currentArea ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", _hoisted_5, _toDisplayString($setup.currentArea === 'scenic' ? '景区路线规划' : '校园路线规划'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"swtich_button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.toggleRouteType && $setup.toggleRouteType(...args))\n  }, \"切换到\" + _toDisplayString($setup.routeType === 'pointToPoint' ? '多途径点' : '点对点'), 1 /* TEXT */), _createCommentVNode(\" 点对点路线规划 \"), $setup.routeType === 'pointToPoint' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input_start\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.startPoint = $event),\n    placeholder: \"起点\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.startPoint]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"input_end\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.endPoint = $event),\n    placeholder: \"终点\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.endPoint]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.transport = $event)\n  }, [_hoisted_7, _createCommentVNode(\"景区特有的电动车\"), $setup.currentArea === 'scenic' ? (_openBlock(), _createElementBlock(\"option\", _hoisted_8, \"电动车\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 校园的交通工具选项 \"), $setup.currentArea === 'campus' ? (_openBlock(), _createElementBlock(\"option\", _hoisted_9, \"自行车\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.transport]]), _createElementVNode(\"button\", {\n    class: \"search_button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $setup.searchRoute && $setup.searchRoute(...args))\n  }, \"搜索\")])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 多途径点路线规划 \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.currentLocation = $event),\n    placeholder: \"当前位置\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.currentLocation]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.viaPoints, (point, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => $setup.viaPoints[index] = $event,\n      placeholder: \"途径点\"\n    }, null, 8 /* PROPS */, _hoisted_10), [[_vModelText, $setup.viaPoints[index]]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $setup.addViaPoint && $setup.addViaPoint(...args))\n  }, \"添加途径点\"), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $setup.searchRoute && $setup.searchRoute(...args))\n  }, \"搜索\")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.routeInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_hoisted_13, _createCommentVNode(\" 使用 v-html 来渲染HTML实体 \"), _createElementVNode(\"div\", {\n    class: \"routeInfo\",\n    innerHTML: $setup.routeInfo\n  }, null, 8 /* PROPS */, _hoisted_14)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","value","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$setup","goToDashboard","_createCommentVNode","$event","selectArea","currentArea","_hoisted_4","_hoisted_5","_toDisplayString","toggleRouteType","routeType","_hoisted_6","startPoint","placeholder","endPoint","transport","_hoisted_7","_hoisted_8","_hoisted_9","searchRoute","_Fragment","currentLocation","_renderList","viaPoints","point","index","_hoisted_10","addViaPoint","error","_hoisted_11","routeInfo","_hoisted_12","_hoisted_13","innerHTML","_hoisted_14"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\RoutePlanner.vue"],"sourcesContent":["<!-- RoutePlanner.vue -->\r\n<template>\r\n  <div class=\"route-planner\">\r\n    <form class=\"form1\">\r\n      <h1 class=\"title\">路线规划</h1>\r\n      <button class=\"return_button\" @click=\"goToDashboard\">返回首页</button>\r\n      <!-- 选择景区或校园 -->\r\n      <div>\r\n        <button class=\"scenic_button\" @click=\"selectArea('scenic')\">景区</button>\r\n        <button class=\"campus_button\" @click=\"selectArea('campus')\">校园</button>\r\n      </div>\r\n      <!-- 根据选择显示不同的输入框 -->\r\n      <!-- 切换点对点和多途径点 -->\r\n      <div v-if=\"currentArea\">\r\n        <h2 class=\"subtitle\">{{ currentArea === 'scenic' ? '景区路线规划' : '校园路线规划' }}</h2>\r\n        <button class=\"swtich_button\" @click=\"toggleRouteType\">切换到{{ routeType === 'pointToPoint' ? '多途径点' : '点对点' }}</button>\r\n        <!-- 点对点路线规划 -->\r\n        <div v-if=\"routeType === 'pointToPoint'\">\r\n          <input class=\"input_start\" v-model=\"startPoint\" placeholder=\"起点\">\r\n          <input class=\"input_end\" v-model=\"endPoint\" placeholder=\"终点\">\r\n          <select v-model=\"transport\">\r\n            <option value=\"walk\">步行</option>\r\n            <!--景区特有的电动车-->\r\n            <option v-if=\"currentArea === 'scenic'\" value=\"ebike\">电动车</option>\r\n            <!-- 校园的交通工具选项 -->\r\n            <option v-if=\"currentArea === 'campus'\" value=\"bike\">自行车</option>\r\n          </select>\r\n          <button class=\"search_button\" @click=\"searchRoute\">搜索</button>\r\n        </div>\r\n        <!-- 多途径点路线规划 -->\r\n        <div v-else>\r\n          <input v-model=\"currentLocation\" placeholder=\"当前位置\">\r\n          <div v-for=\"(point, index) in viaPoints\" :key=\"index\">\r\n            <input v-model=\"viaPoints[index]\" placeholder=\"途径点\">\r\n          </div>\r\n          <button @click=\"addViaPoint\">添加途径点</button>\r\n          <button @click=\"searchRoute\">搜索</button>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n      <div v-if=\"routeInfo\" class=\"route-info\">\r\n        <h3 class=\"subtitle2\">路线信息:</h3>\r\n        <!-- 使用 v-html 来渲染HTML实体 -->\r\n        <div class=\"routeInfo\" v-html=\"routeInfo\"></div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'RoutePlanner',\r\n  setup() {\r\n    const currentArea = ref('scenic');\r\n    const routeType = ref('pointToPoint'); // 默认为点对点路线规划\r\n    const startPoint = ref('');\r\n    const endPoint = ref('');\r\n    const currentLocation = ref('');\r\n    const viaPoints = ref(['']);\r\n    const transport = ref('walk');\r\n    const error = ref('');\r\n    const routeInfo = ref('');\r\n    const router = useRouter();\r\n\r\n    // 从路由获取查询参数\r\n    const { query } = router.currentRoute.value;\r\n\r\n    // 新增重置字段的函数\r\n    const resetFields = () => {\r\n      startPoint.value = '';\r\n      endPoint.value = '';\r\n      currentLocation.value = '';\r\n      viaPoints.value = ['']; // 重置途径点列表\r\n      transport.value = 'walk'; // 重置交通工具\r\n      error.value = ''; // 清除错误信息\r\n      routeInfo.value = ''; // 清除路线信息\r\n    };\r\n\r\n    //onMounted(resetFields); // 组件挂载时重置字段\r\n\r\n    onMounted(() => {\r\n      // 组件挂载时重置字段\r\n      resetFields();\r\n\r\n      // 设置起点和终点\r\n      if (query.startPoint && query.endPoint) {\r\n        startPoint.value = query.startPoint;\r\n        endPoint.value = query.endPoint;\r\n      }\r\n    });\r\n\r\n    const toggleRouteType = () => {\r\n      resetFields(); // 添加重置字段操作\r\n      routeType.value = routeType.value === 'pointToPoint' ? 'multipleWaypoints' : 'pointToPoint';\r\n    };\r\n\r\n    const selectArea = (area) => {\r\n      resetFields(); // 添加重置字段操作\r\n      currentArea.value = area;\r\n      //routeType.value = 'pointToPoint'; // 默认选择点对点路线规划\r\n    };\r\n\r\n    const addViaPoint = () => {\r\n      viaPoints.value.push('');\r\n    };\r\n\r\n    const searchRoute = async () => {\r\n      try {\r\n        const response = await axios.post('/api/route-plan', {\r\n          area: currentArea.value,\r\n          type: routeType.value,\r\n          startPoint: startPoint.value,\r\n          endPoint: endPoint.value,\r\n          currentLocation: currentLocation.value,\r\n          viaPoints: viaPoints.value,\r\n          transport: transport.value,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          routeInfo.value = response.data.info;\r\n        } else {\r\n          error.value = response.data.error;\r\n        }\r\n      } catch (err) {\r\n        error.value = '搜索路线时发生错误。';\r\n      }\r\n    };\r\n\r\n    // 定义跳转到首页的函数\r\n    const goToDashboard = () => {\r\n      router.push('/dashboard');\r\n    };\r\n\r\n    return {\r\n      currentArea,\r\n      routeType,\r\n      startPoint,\r\n      endPoint,\r\n      currentLocation,\r\n      viaPoints,\r\n      transport,\r\n      error,\r\n      routeInfo,\r\n      selectArea,\r\n      addViaPoint,\r\n      searchRoute,\r\n      toggleRouteType,\r\n      resetFields,\r\n      goToDashboard,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.route-planner {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}