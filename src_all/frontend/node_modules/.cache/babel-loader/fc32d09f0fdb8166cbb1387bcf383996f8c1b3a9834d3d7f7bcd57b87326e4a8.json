{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'StudyTourRecommendations',\n  setup() {\n    const recommendations = ref([]); // 存储后端发来的游学推荐信息\n    const filterType = ref('all'); // 筛选类型\n    const limit = ref('all'); // 展示数量限制\n    const sort = ref('default'); // 排序方式\n    const searchKeyword = ref(''); // 搜索关键字\n    const router = useRouter(); // vue-router\n\n    // 解析后端返回的字符串数据\n    const parseRecommendations = data => {\n      return data.split('\\n').filter(line => line.trim() !== '').map(line => {\n        const parts = line.split(' '); // 根据空格分割每一行\n        return {\n          id: parseInt(parts[0], 10),\n          // 将ID转换为数字\n          name: parts[1],\n          // 类型\n          type: parts[2],\n          // 名称\n          popularity: parseInt(parts[3], 10),\n          // 热度转换为数字\n          rating: parseFloat(parts[4]) // 评分转换为浮点数\n        };\n      });\n    };\n\n    // 获取游学推荐数据\n    const fetchRecommendations = async () => {\n      try {\n        const bodyData = {\n          filterType: filterType.value,\n          limit: limit.value,\n          sort: sort.value,\n          searchKeyword: searchKeyword.value\n        };\n        const response = await axios.post('/api/recommendation', bodyData);\n        if (response.data.success) recommendations.value = parseRecommendations(response.data.list);\n      } catch (err) {\n        console.error('Error fetching recommendations:', err);\n      }\n    };\n\n    // 新增搜索函数\n    const search = () => {\n      console.log('搜索关键字:', searchKeyword.value);\n      // 可以在这里添加额外的搜索逻辑（如果需要）\n      fetchRecommendations(); // 使用当前的筛选条件和搜索关键字获取数据\n    };\n\n    // 跳转到描述页面\n    const goToDescription = item => {\n      // 根据item.type的值来决定跳转的路由\n      const path = item.type === 'attraction' ? '/description' : '/descriptionsc';\n      router.push(path);\n      //router.push(`/description`);\n    };\n\n    // 定义跳转到首页的函数\n    const goToDashboard = () => {\n      router.push('/dashboard');\n    };\n\n    // 初始化获取数据\n    fetchRecommendations();\n    return {\n      recommendations,\n      filterType,\n      limit,\n      sort,\n      searchKeyword,\n      search,\n      goToDescription,\n      goToDashboard\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","setup","recommendations","filterType","limit","sort","searchKeyword","router","parseRecommendations","data","split","filter","line","trim","map","parts","id","parseInt","type","popularity","rating","parseFloat","fetchRecommendations","bodyData","value","response","post","success","list","err","console","error","search","log","goToDescription","item","path","push","goToDashboard"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\StudyTourRecommendations.vue"],"sourcesContent":["<!-- StudyTourRecommendations.vue -->\r\n<template>\r\n  <div class=\"background\"></div>\r\n  <form class=\"form\">\r\n    <div class=\"study-tour-recommendations\">\r\n      <h1 class=\"title\">游学推荐</h1>\r\n      <button class=\"return_button\" @click.prevent=\"goToDashboard\">返回首页</button>\r\n      <!-- 筛选选项 -->\r\n      <div class=\"search\">\r\n        <div class=\"filters\">\r\n          <select v-model=\"filterType\">\r\n            <option value=\"all\">全部</option>\r\n            <option value=\"scenic\">景区</option>\r\n            <option value=\"campus\">学校</option>\r\n          </select>\r\n          <select v-model=\"limit\">\r\n            <option value=\"all\">全部</option>\r\n            <option value=\"10\">前十</option>\r\n          </select>\r\n          <select v-model=\"sort\">\r\n            <option value=\"default\">默认排序</option>\r\n            <option value=\"popularity\">热度</option>\r\n            <option value=\"rating\">评分</option>\r\n          </select>\r\n        </div>\r\n        <!-- 搜索框 -->\r\n        <input type=\"text\" v-model=\"searchKeyword\" placeholder=\"搜索景区或学校\">\r\n        <button @click.prevent=\"search\">搜索</button>\r\n      </div>\r\n      <!-- 游学推荐列表 -->\r\n      <ul class=\"recommendations-list\">\r\n        <li v-for=\"item in recommendations\" :key=\"item.id\" class=\"recommendation-item\">\r\n          <p>名称：{{ item.name }}</p>\r\n          <p>热度：{{ item.popularity }} </p>\r\n          <p>评分：{{ item.rating }} </p>\r\n          <!-- 点击跳转到描述页面 -->\r\n          <button @click.prevent=\"goToDescription(item)\">详情</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'StudyTourRecommendations',\r\n  setup() {\r\n    const recommendations = ref([]); // 存储后端发来的游学推荐信息\r\n    const filterType = ref('all'); // 筛选类型\r\n    const limit = ref('all'); // 展示数量限制\r\n    const sort = ref('default'); // 排序方式\r\n    const searchKeyword = ref(''); // 搜索关键字\r\n    const router = useRouter(); // vue-router\r\n\r\n    // 解析后端返回的字符串数据\r\n    const parseRecommendations = (data) => {\r\n      return data.split('\\n').filter(line => line.trim() !== '').map(line => {\r\n        const parts = line.split(' '); // 根据空格分割每一行\r\n        return {\r\n          id: parseInt(parts[0], 10), // 将ID转换为数字\r\n          name: parts[1], // 类型\r\n          type: parts[2], // 名称\r\n          popularity: parseInt(parts[3], 10), // 热度转换为数字\r\n          rating: parseFloat(parts[4]), // 评分转换为浮点数\r\n        };\r\n      });\r\n    };\r\n\r\n    // 获取游学推荐数据\r\n    const fetchRecommendations = async () => {\r\n      try {\r\n        const bodyData = {\r\n          filterType: filterType.value,\r\n          limit: limit.value,\r\n          sort: sort.value,\r\n          searchKeyword: searchKeyword.value,\r\n        };\r\n\r\n        const response = await axios.post('/api/recommendation', bodyData);\r\n\r\n        if (response.data.success)\r\n          recommendations.value = parseRecommendations(response.data.list);\r\n      } catch (err) {\r\n        console.error('Error fetching recommendations:', err);\r\n      }\r\n    };\r\n\r\n    // 新增搜索函数\r\n    const search = () => {\r\n      console.log('搜索关键字:', searchKeyword.value);\r\n      // 可以在这里添加额外的搜索逻辑（如果需要）\r\n      fetchRecommendations(); // 使用当前的筛选条件和搜索关键字获取数据\r\n    };\r\n\r\n    // 跳转到描述页面\r\n    const goToDescription = (item) => {\r\n      // 根据item.type的值来决定跳转的路由\r\n      const path = (item.type === 'attraction') ? '/description' : '/descriptionsc';\r\n      router.push(path);\r\n      //router.push(`/description`);\r\n    };\r\n\r\n    // 定义跳转到首页的函数\r\n    const goToDashboard = () => {\r\n      router.push('/dashboard');\r\n    };\r\n\r\n    // 初始化获取数据\r\n    fetchRecommendations();\r\n\r\n    return {\r\n      recommendations,\r\n      filterType,\r\n      limit,\r\n      sort,\r\n      searchKeyword,\r\n      search,\r\n      goToDescription,\r\n      goToDashboard,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.background {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/recommendback.jpg');\r\n  background-size: cover;\r\n}\r\n\r\n.background::before {\r\n  content: \"\";\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n  z-index: -1;\r\n  /* 确保背景层在内容层之下 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  transform: translate(-50%, 0%);\r\n  padding: 2%;\r\n  top: 10%;\r\n  left: 50%;\r\n  width: 45%;\r\n  min-height: 500px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px;\r\n  /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.title {\r\n  color: #fefefe;\r\n  font-size: 4em;\r\n  /* 设置字号大小 */\r\n  margin: 0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif;\r\n  /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh;\r\n  text-align: center;\r\n  margin-left: auto;\r\n  /* 左外边距自动 */\r\n  margin-right: auto;\r\n  /* 右外边距自动 */\r\n  margin-bottom: 0em;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  font-size: 1em;\r\n  border: 1px solid #000;\r\n  /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer;\r\n  /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px;\r\n  /* 添加圆角 */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #56cfcf;\r\n}\r\n\r\n.return_button {\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  top: 2em;\r\n  left: 10%;\r\n}\r\n\r\n.search {\r\n  text-align: center;\r\n  margin-left: auto;\r\n  /* 左外边距自动 */\r\n  margin-right: auto;\r\n  /* 右外边距自动 */\r\n}\r\n\r\n.recommendation-item {\r\n  color: #fefefe;\r\n  margin-bottom: 3em;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}