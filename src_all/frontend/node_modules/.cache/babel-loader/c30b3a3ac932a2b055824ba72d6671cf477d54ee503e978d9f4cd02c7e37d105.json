{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { onMounted } from \"vue\";\nexport default {\n  setup() {\n    // 登录相关的响应式引用和方法\n    const username = ref('');\n    const password = ref('');\n    const loginError = ref(''); // 用于存储登录错误信息\n    const output = ref(''); // 存储后端发来的信息\n    const router = useRouter();\n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/api/login', {\n          username: username.value,\n          password: password.value\n        });\n        if (response.status === 200) {\n          output.value = response.data; // 将后端返回的输出存储在 output 变量中\n          if (output.value === '登录成功') {\n            alert('登录成功');\n            router.push('/dashboard');\n          }\n        }\n      } catch (error) {\n        // 网络或其他错误处理\n        loginError.value = '登录过程中发生错误。';\n      }\n    };\n    const goToForgotPassword = () => {\n      router.push('/forgot-password');\n    };\n    const goToChangePassword = () => {\n      router.push('/change-password');\n    };\n\n    // 星空效果相关的响应式引用和方法\n    let starsRef = ref(null);\n    const starsCount = 800; // 星星数量\n    const distance = 900; // 间距\n\n    onMounted(() => {\n      let starNodes = Array.from(starsRef.value.children);\n      starNodes.forEach(item => {\n        let speed = 0.2 + Math.random() * 1;\n        let thisDistance = distance + Math.random() * 300;\n        item.style.transformOrigin = `0 0 ${thisDistance}px`;\n        item.style.transform = `\n        translate3d(0,0,-${thisDistance}px)\n        rotateY(${Math.random() * 360}deg)\n        rotateX(${Math.random() * -50}deg)\n        scale(${speed},${speed})`;\n      });\n    });\n\n    // 返回所有响应式引用和方法供模板使用\n    return {\n      username,\n      password,\n      loginError,\n      output,\n      handleSubmit,\n      goToForgotPassword,\n      goToChangePassword,\n      starsRef,\n      starsCount\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","useRouter","onMounted","setup","username","password","loginError","output","router","handleSubmit","response","post","value","status","data","alert","push","error","goToForgotPassword","goToChangePassword","starsRef","starsCount","distance","starNodes","Array","from","children","forEach","item","speed","Math","random","thisDistance","style","transformOrigin","transform"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2 class=\"title_login\">登录</h2>\r\n    <button @click=\"goToChangePassword\">\r\n      修改密码\r\n    </button>\r\n    <button @click=\"goToForgotPassword\">\r\n      忘记密码？\r\n    </button>\r\n    <div class=\"stars\" ref=\"starsRef\">\r\n      <div class=\"star\" v-for=\"(item, index) in starsCount\" :key=\"index\"></div>\r\n    </div>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">用户名:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">登录</button>\r\n      <p v-if=\"loginError\">{{ loginError }}</p> <!-- 显示登录错误信息 -->\r\n      <p v-if=\"output\">{{ output }}</p> <!-- 新增：显示从后端接收的输出 -->\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from \"vue\";\r\n\r\nexport default {\r\n  setup() {\r\n    // 登录相关的响应式引用和方法\r\n    const username = ref('');\r\n    const password = ref('');\r\n    const loginError = ref(''); // 用于存储登录错误信息\r\n    const output = ref('');    // 存储后端发来的信息\r\n    const router = useRouter();\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/login', {\r\n          username: username.value,\r\n          password: password.value\r\n        });\r\n        if (response.status === 200) {\r\n          output.value = response.data; // 将后端返回的输出存储在 output 变量中\r\n          if (output.value === '登录成功') {\r\n            alert('登录成功');\r\n            router.push('/dashboard');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // 网络或其他错误处理\r\n        loginError.value = '登录过程中发生错误。';\r\n      }\r\n    };\r\n\r\n    const goToForgotPassword = () => {\r\n      router.push('/forgot-password');\r\n    };\r\n\r\n    const goToChangePassword = () => {\r\n      router.push('/change-password');\r\n    };\r\n\r\n    // 星空效果相关的响应式引用和方法\r\n    let starsRef = ref(null);\r\n    const starsCount = 800; // 星星数量\r\n    const distance = 900; // 间距\r\n\r\n    onMounted(() => {\r\n      let starNodes = Array.from(starsRef.value.children);\r\n      starNodes.forEach((item) => {\r\n        let speed = 0.2 + Math.random() * 1;\r\n        let thisDistance = distance + Math.random() * 300;\r\n        item.style.transformOrigin = `0 0 ${thisDistance}px`;\r\n        item.style.transform = `\r\n        translate3d(0,0,-${thisDistance}px)\r\n        rotateY(${Math.random() * 360}deg)\r\n        rotateX(${Math.random() * -50}deg)\r\n        scale(${speed},${speed})`;\r\n      });\r\n    });\r\n\r\n    // 返回所有响应式引用和方法供模板使用\r\n    return {\r\n      username,\r\n      password,\r\n      loginError,\r\n      output,\r\n      handleSubmit,\r\n      goToForgotPassword,\r\n      goToChangePassword,\r\n      starsRef,\r\n      starsCount,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.title_login {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 10vh; /* 从视口顶部向下移动20% */\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  position: absolute;\r\n  font-size: 2em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #56cfcf;\r\n}\r\n\r\n.login-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n@keyframes rotate {\r\n  0% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg) rotateY(0);\r\n  }\r\n  100% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg)\r\n      rotateY(-360deg);\r\n  }\r\n}\r\n.stars {\r\n  transform: perspective(500px);\r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  perspective-origin: 50% 100%;\r\n  left: 45%;\r\n  animation: rotate 90s infinite linear;\r\n  bottom: 0;\r\n}\r\n.star {\r\n  width: 2px;\r\n  height: 2px;\r\n  background: #f7f7b6;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  backface-visibility: hidden;\r\n}\r\n</style>"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,SAAQ,QAAS,KAAK;AAE/B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,QAAO,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,UAAS,GAAIN,GAAG,CAAC,EAAE,CAAC,EAAE;IAC5B,MAAMO,MAAK,GAAIP,GAAG,CAAC,EAAE,CAAC,EAAK;IAC3B,MAAMQ,MAAK,GAAIP,SAAS,CAAC,CAAC;IAE1B,MAAMQ,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,iCAAiC,EAAE;UACnEP,QAAQ,EAAEA,QAAQ,CAACQ,KAAK;UACxBP,QAAQ,EAAEA,QAAQ,CAACO;QACrB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3BN,MAAM,CAACK,KAAI,GAAIF,QAAQ,CAACI,IAAI,EAAE;UAC9B,IAAIP,MAAM,CAACK,KAAI,KAAM,MAAM,EAAE;YAC3BG,KAAK,CAAC,MAAM,CAAC;YACbP,MAAM,CAACQ,IAAI,CAAC,YAAY,CAAC;UAC3B;QACF;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACAX,UAAU,CAACM,KAAI,GAAI,YAAY;MACjC;IACF,CAAC;IAED,MAAMM,kBAAiB,GAAIA,CAAA,KAAM;MAC/BV,MAAM,CAACQ,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,MAAMG,kBAAiB,GAAIA,CAAA,KAAM;MAC/BX,MAAM,CAACQ,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;;IAED;IACA,IAAII,QAAO,GAAIpB,GAAG,CAAC,IAAI,CAAC;IACxB,MAAMqB,UAAS,GAAI,GAAG,EAAE;IACxB,MAAMC,QAAO,GAAI,GAAG,EAAE;;IAEtBpB,SAAS,CAAC,MAAM;MACd,IAAIqB,SAAQ,GAAIC,KAAK,CAACC,IAAI,CAACL,QAAQ,CAACR,KAAK,CAACc,QAAQ,CAAC;MACnDH,SAAS,CAACI,OAAO,CAAEC,IAAI,IAAK;QAC1B,IAAIC,KAAI,GAAI,GAAE,GAAIC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC;QACnC,IAAIC,YAAW,GAAIV,QAAO,GAAIQ,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG;QACjDH,IAAI,CAACK,KAAK,CAACC,eAAc,GAAK,OAAMF,YAAa,IAAG;QACpDJ,IAAI,CAACK,KAAK,CAACE,SAAQ,GAAI;2BACJH,YAAa;kBACtBF,IAAI,CAACC,MAAM,CAAC,IAAI,GAAI;kBACpBD,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC,EAAG;gBACtBF,KAAM,IAAGA,KAAM,GAAE;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO;MACLzB,QAAQ;MACRC,QAAQ;MACRC,UAAU;MACVC,MAAM;MACNE,YAAY;MACZS,kBAAkB;MAClBC,kBAAkB;MAClBC,QAAQ;MACRC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}