{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e499aba\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"forgot-password-container\"\n};\nconst _hoisted_2 = {\n  class: \"stars\",\n  ref: \"starsRef\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"title\"\n}, \"找回密码\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"input\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"用户名:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"submit_button\",\n  type: \"submit\"\n}, \"找回密码\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0,\n  class: \"return_message1\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"return_message2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.starsCount, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"star\",\n      key: index\n    });\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"form\", {\n    class: \"form\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.handleForgotPassword && $setup.handleForgotPassword(...args), [\"prevent\"]))\n  }, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]])]), _hoisted_6, $setup.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示错误信息 \"), $setup.output ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($setup.output), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示成功消息或其他信息 \"), $setup.showLoginButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"return\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.goToLogin && $setup.goToLogin(...args))\n  }, \"返回登录页面\")) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","ref","_createElementVNode","for","type","key","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","starsCount","item","index","onSubmit","_cache","_withModifiers","args","handleForgotPassword","_hoisted_3","_hoisted_4","_hoisted_5","id","$event","username","required","_hoisted_6","error","_hoisted_7","_toDisplayString","_createCommentVNode","output","_hoisted_8","showLoginButton","onClick","goToLogin"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\myForgotPassword.vue"],"sourcesContent":["<!-- myForgotPassword.vue -->\r\n<template>\r\n    <div class=\"forgot-password-container\">\r\n        <div class=\"stars\" ref=\"starsRef\">\r\n            <div class=\"star\" v-for=\"(item, index) in starsCount\" :key=\"index\"></div>\r\n        </div>\r\n        <form class=\"form\" @submit.prevent=\"handleForgotPassword\">\r\n            <h2 class=\"title\">找回密码</h2>\r\n            <div class=\"input\">\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <button class=\"submit_button\" type=\"submit\">找回密码</button>\r\n            <p class=\"return_message1\" v-if=\"error\">{{ error }}</p> <!-- 显示错误信息 -->\r\n            <p class=\"return_message2\" v-if=\"output\">{{ output }}</p> <!-- 显示成功消息或其他信息 -->\r\n            <button class=\"return\" v-if=\"showLoginButton\" @click=\"goToLogin\">返回登录页面</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { onMounted } from \"vue\";\r\n\r\nexport default {\r\n    name: 'myForgotPassword',\r\n    setup() {\r\n        const username = ref('');\r\n        const error = ref(''); // 用于存储错误信息\r\n        const output = ref(''); // 用于存储成功消息或其他信息\r\n        const showLoginButton = ref(false); // 控制登录按钮显示的变量\r\n        const router = useRouter(); // 创建 router 实例\r\n\r\n        let starsRef = ref(null);\r\n\r\n        const starsCount = 800; //星星数量\r\n        const distance = 900; //间距\r\n\r\n        const handleForgotPassword = async () => {\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/api/forgot-password', {\r\n                    username: username.value\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    // 处理找回密码成功的逻辑\r\n                    output.value = response.data;\r\n                    if (output.value !== '用户名不存在！') {\r\n                        showLoginButton.value = true; // 显示登录按钮\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                // 网络或其他错误处理\r\n                error.value = '找回密码过程中发生错误：' + error.message;\r\n            }\r\n        };\r\n\r\n        const goToLogin = () => {\r\n            router.push('/login'); // 导航到登录页面\r\n        };\r\n\r\n        onMounted(() => {\r\n            let starNodes = Array.from(starsRef.value.children);\r\n            starNodes.forEach((item) => {\r\n                let speed = 0.2 + Math.random() * 1;\r\n                let thisDistance = distance + Math.random() * 300;\r\n                item.style.transformOrigin = `0 0 ${thisDistance}px`;\r\n                item.style.transform = `\r\n                translate3d(0,0,-${thisDistance}px)\r\n                rotateY(${Math.random() * 360}deg)\r\n                rotateX(${Math.random() * -50}deg)\r\n                scale(${speed},${speed})`;\r\n            });\r\n        });\r\n        \r\n        // 返回响应式引用供模板使用\r\n        return {\r\n            username,\r\n            error,\r\n            output,\r\n            showLoginButton,\r\n            handleForgotPassword,\r\n            goToLogin,\r\n            starsRef,\r\n            starsCount,\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.title {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; /* 从视口顶部向下移动20% */\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  bottom: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, 20%);\r\n  width: 750px;\r\n  height: 500px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.input {\r\n  align-items: center; /* 垂直居中 */\r\n  color: #fefefe;\r\n  font-size: 2.5em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif;\r\n  position: relative;\r\n  left: -10%;\r\n  margin: 0;\r\n  text-align: right; /* 这会让内部的input元素右对齐 */\r\n}\r\n\r\nlabel {\r\n  margin-right: 10px; /* 标签和输入框之间增加间距 */\r\n}\r\n\r\ninput {\r\n  height: 2em;\r\n  width: 55%;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  position: absolute;\r\n  font-size: 2em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #56cfcf;\r\n}\r\n\r\n.submit_button {\r\n  position: absolute;\r\n  bottom: 20%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  cursor: pointer;\r\n  width: 30%;\r\n}\r\n\r\n.return {\r\n  position: absolute;\r\n  bottom: 10%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 1.5em;\r\n  width:30%;\r\n  cursor: pointer;\r\n}\r\n\r\n.return_message1, .return_message2 {\r\n  color: #fefefe;\r\n  font-size: 2em; /* 设置字号大小 */\r\n  margin:1em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n}\r\n\r\n.return_message1 {\r\n  bottom: 10%;\r\n}\r\n\r\n.return_message2 {\r\n  bottom: 5%;\r\n}\r\n\r\n.forgot-password-container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n@keyframes rotate {\r\n  0% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg) rotateY(0);\r\n  }\r\n  100% {\r\n    transform: perspective(400px) rotateZ(20deg) rotateX(-40deg)\r\n      rotateY(-360deg);\r\n  }\r\n}\r\n.stars {\r\n  transform: perspective(500px);\r\n  transform-style: preserve-3d;\r\n  position: absolute;\r\n  perspective-origin: 50% 100%;\r\n  left: 45%;\r\n  animation: rotate 90s infinite linear;\r\n  bottom: 0;\r\n}\r\n.star {\r\n  width: 2px;\r\n  height: 2px;\r\n  background: #f7f7b6;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  backface-visibility: hidden;\r\n}\r\n</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAA2B;;EAC7BA,KAAK,EAAC,OAAO;EAACC,GAAG,EAAC;;gEAInBC,mBAAA,CAA2B;EAAvBF,KAAK,EAAC;AAAO,GAAC,MAAI;;EACjBA,KAAK,EAAC;AAAO;gEACdE,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;gEAG9BD,mBAAA,CAAyD;EAAjDF,KAAK,EAAC,eAAe;EAACI,IAAI,EAAC;GAAS,MAAI;;EAZ5DC,GAAA;EAaeL,KAAK,EAAC;;;EAbrBK,GAAA;EAceL,KAAK,EAAC;;;uBAZjBM,mBAAA,CAeM,OAfNC,UAeM,GAdFL,mBAAA,CAEM,OAFNM,UAEM,I,kBADFF,mBAAA,CAAyEG,SAAA,QAJrFC,WAAA,CAIsDC,MAAA,CAAAC,UAAU,EAJhE,CAIsCC,IAAI,EAAEC,KAAK;yBAArCR,mBAAA,CAAyE;MAApEN,KAAK,EAAC,MAAM;MAAsCK,GAAG,EAAES;;0DAEhEZ,mBAAA,CAUO;IAVDF,KAAK,EAAC,MAAM;IAAEe,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANlCC,cAAA,KAAAC,IAAA,KAM4CP,MAAA,CAAAQ,oBAAA,IAAAR,MAAA,CAAAQ,oBAAA,IAAAD,IAAA,CAAoB;MACpDE,UAA2B,EAC3BlB,mBAAA,CAGM,OAHNmB,UAGM,GAFFC,UAAkC,E,gBAClCpB,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACmB,EAAE,EAAC,UAAU;IAVhD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAU0Db,MAAA,CAAAc,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAAVf,MAAA,CAAAc,QAAQ,E,KAEtDE,UAAyD,EACxBhB,MAAA,CAAAiB,KAAK,I,cAAtCtB,mBAAA,CAAuD,KAAvDuB,UAAuD,EAAAC,gBAAA,CAAZnB,MAAA,CAAAiB,KAAK,oBAb5DG,mBAAA,gBAaoEA,mBAAA,YAAe,EACtCpB,MAAA,CAAAqB,MAAM,I,cAAvC1B,mBAAA,CAAyD,KAAzD2B,UAAyD,EAAAH,gBAAA,CAAbnB,MAAA,CAAAqB,MAAM,oBAd9DD,mBAAA,gBAcsEA,mBAAA,iBAAoB,EACjDpB,MAAA,CAAAuB,eAAe,I,cAA5C5B,mBAAA,CAAgF;IAf5FD,GAAA;IAeoBL,KAAK,EAAC,QAAQ;IAAyBmC,OAAK,EAAAnB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEP,MAAA,CAAAyB,SAAA,IAAAzB,MAAA,CAAAyB,SAAA,IAAAlB,IAAA,CAAS;KAAE,QAAM,KAfnFa,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}