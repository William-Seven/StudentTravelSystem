{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, vModelText as _vModelText, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-271bca0e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"background\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"map-container\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"route-planner\"\n};\nconst _hoisted_5 = {\n  class: \"form1\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"路线规划\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  class: \"subtitle\"\n};\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"walk\"\n}, \"步行\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  key: 0,\n  value: \"ebike\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  value: \"bike\"\n};\nconst _hoisted_13 = [\"onUpdate:modelValue\"];\nconst _hoisted_14 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_15 = {\n  key: 2,\n  class: \"route-info\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"subtitle2\"\n}, \"路线信息\", -1 /* HOISTED */));\nconst _hoisted_17 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $setup.currentArea === 'scenic' ? require('@/assets/map/map.png') : require('@/assets/map/mapsc.png'),\n    alt: \"Map\"\n  }, null, 8 /* PROPS */, _hoisted_3)], 512 /* NEED_PATCH */), [[_vShow, $setup.currentArea]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", _hoisted_5, [_hoisted_6, _createElementVNode(\"button\", {\n    class: \"return_button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goToDashboard && $setup.goToDashboard(...args))\n  }, \"返回首页\"), _createCommentVNode(\" 选择景区或校园 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    class: \"scenic_button\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers($event => $setup.selectArea('scenic'), [\"prevent\"]))\n  }, \"景区\"), _createElementVNode(\"button\", {\n    class: \"campus_button\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers($event => $setup.selectArea('campus'), [\"prevent\"]))\n  }, \"校园\")]), _createCommentVNode(\" 根据选择显示不同的输入框 \"), _createCommentVNode(\" 切换点对点和多途径点 \"), $setup.currentArea ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"h2\", _hoisted_8, _toDisplayString($setup.currentArea === 'scenic' ? '景区路线规划' : '校园路线规划'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"switch_button\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.toggleRouteType && $setup.toggleRouteType(...args), [\"prevent\"]))\n  }, \"切换到\" + _toDisplayString($setup.routeType === 'pointToPoint' ? '多途径点' : '点对点'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"search_button\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers((...args) => $setup.searchRoute && $setup.searchRoute(...args), [\"prevent\"]))\n  }, \"搜索\"), _createCommentVNode(\" 点对点路线规划 \"), $setup.routeType === 'pointToPoint' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input_start\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.startPoint = $event),\n    placeholder: \"起点\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.startPoint]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"input_end\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.endPoint = $event),\n    placeholder: \"终点\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.endPoint]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.transport = $event)\n  }, [_hoisted_10, _createCommentVNode(\"景区特有的电动车\"), $setup.currentArea === 'scenic' ? (_openBlock(), _createElementBlock(\"option\", _hoisted_11, \"电动车\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 校园的交通工具选项 \"), $setup.currentArea === 'campus' ? (_openBlock(), _createElementBlock(\"option\", _hoisted_12, \"自行车\")) : _createCommentVNode(\"v-if\", true)], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.transport]])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 多途径点路线规划 \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"input_start\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.currentLocation = $event),\n    placeholder: \"当前位置\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.currentLocation]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.viaPoints, (point, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"input_passing\",\n      \"onUpdate:modelValue\": $event => $setup.viaPoints[index] = $event,\n      placeholder: \"途径点\"\n    }, null, 8 /* PROPS */, _hoisted_13), [[_vModelText, $setup.viaPoints[index]]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    class: \"add_button\",\n    onClick: _cache[9] || (_cache[9] = _withModifiers((...args) => $setup.addViaPoint && $setup.addViaPoint(...args), [\"prevent\"]))\n  }, \"添加途径点\")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.routeInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_hoisted_16, _createCommentVNode(\" 使用 v-html 来渲染HTML实体 \"), _createElementVNode(\"div\", {\n    class: \"routeInfo\",\n    innerHTML: $setup.routeInfo\n  }, null, 8 /* PROPS */, _hoisted_17)])) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","key","value","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","src","$setup","currentArea","require","alt","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","onClick","_cache","args","goToDashboard","_createCommentVNode","_withModifiers","$event","selectArea","_hoisted_7","_hoisted_8","_toDisplayString","toggleRouteType","routeType","searchRoute","_hoisted_9","startPoint","placeholder","endPoint","transport","_hoisted_10","_hoisted_11","_hoisted_12","currentLocation","_renderList","viaPoints","point","index","_hoisted_13","addViaPoint","error","_hoisted_14","routeInfo","_hoisted_15","_hoisted_16","innerHTML","_hoisted_17"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\RoutePlanner.vue"],"sourcesContent":["<!-- RoutePlanner.vue -->\r\n<template>\r\n  <div class=\"background\"></div>\r\n  <div v-show=\"currentArea\" class=\"map-container\">\r\n        <img :src=\"currentArea === 'scenic' ? require('@/assets/map/map.png') : require('@/assets/map/mapsc.png')\" alt=\"Map\">\r\n    </div>\r\n  <div class=\"route-planner\">\r\n    <form class=\"form1\">\r\n      <h1 class=\"title\">路线规划</h1>\r\n      <button class=\"return_button\" @click=\"goToDashboard\">返回首页</button>\r\n      <!-- 选择景区或校园 -->\r\n      <div>\r\n        <button class=\"scenic_button\" @click.prevent=\"selectArea('scenic')\">景区</button>\r\n        <button class=\"campus_button\" @click.prevent=\"selectArea('campus')\">校园</button>\r\n      </div>\r\n      <!-- 根据选择显示不同的输入框 -->\r\n      <!-- 切换点对点和多途径点 -->\r\n      <div v-if=\"currentArea\">\r\n        <h2 class=\"subtitle\">{{ currentArea === 'scenic' ? '景区路线规划' : '校园路线规划' }}</h2>\r\n        <button class=\"switch_button\" @click.prevent=\"toggleRouteType\">切换到{{ routeType === 'pointToPoint' ? '多途径点' : '点对点' }}</button>\r\n        <button class=\"search_button\" @click.prevent=\"searchRoute\">搜索</button>\r\n        <!-- 点对点路线规划 -->\r\n        <div v-if=\"routeType === 'pointToPoint'\">\r\n          <input class=\"input_start\" v-model=\"startPoint\" placeholder=\"起点\">\r\n          <input class=\"input_end\" v-model=\"endPoint\" placeholder=\"终点\">\r\n          <select v-model=\"transport\">\r\n            <option value=\"walk\">步行</option>\r\n            <!--景区特有的电动车-->\r\n            <option v-if=\"currentArea === 'scenic'\" value=\"ebike\">电动车</option>\r\n            <!-- 校园的交通工具选项 -->\r\n            <option v-if=\"currentArea === 'campus'\" value=\"bike\">自行车</option>\r\n          </select>\r\n          \r\n        </div>\r\n        <!-- 多途径点路线规划 -->\r\n        <div v-else>\r\n          <input class=\"input_start\" v-model=\"currentLocation\" placeholder=\"当前位置\">\r\n          <div v-for=\"(point, index) in viaPoints\" :key=\"index\">\r\n            <input class=\"input_passing\" v-model=\"viaPoints[index]\" placeholder=\"途径点\">\r\n          </div>\r\n          <button class=\"add_button\" @click.prevent=\"addViaPoint\">添加途径点</button>\r\n          \r\n        </div>\r\n      </div>\r\n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n      <div v-if=\"routeInfo\" class=\"route-info\">\r\n        <h3 class=\"subtitle2\">路线信息</h3>\r\n        <!-- 使用 v-html 来渲染HTML实体 -->\r\n        <div class=\"routeInfo\" v-html=\"routeInfo\"></div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'RoutePlanner',\r\n  setup() {\r\n    const currentArea = ref('scenic');\r\n    const routeType = ref('pointToPoint'); // 默认为点对点路线规划\r\n    const startPoint = ref('');\r\n    const endPoint = ref('');\r\n    const currentLocation = ref('');\r\n    const viaPoints = ref(['']);\r\n    const transport = ref('walk');\r\n    const error = ref('');\r\n    const routeInfo = ref('');\r\n    const router = useRouter();\r\n\r\n    // 从路由获取查询参数\r\n    const { query } = router.currentRoute.value;\r\n\r\n    // 新增重置字段的函数\r\n    const resetFields = () => {\r\n      startPoint.value = '';\r\n      endPoint.value = '';\r\n      currentLocation.value = '';\r\n      viaPoints.value = ['']; // 重置途径点列表\r\n      transport.value = 'walk'; // 重置交通工具\r\n      error.value = ''; // 清除错误信息\r\n      routeInfo.value = ''; // 清除路线信息\r\n    };\r\n\r\n    //onMounted(resetFields); // 组件挂载时重置字段\r\n\r\n    onMounted(() => {\r\n      // 组件挂载时重置字段\r\n      resetFields();\r\n\r\n      // 检查URL查询参数中的area\r\n      if (query.area) {\r\n        selectArea(query.area); // 根据查询参数设置当前区域\r\n      }\r\n\r\n      // 设置起点和终点\r\n      if (query.startPoint && query.endPoint) {\r\n        startPoint.value = query.startPoint;\r\n        endPoint.value = query.endPoint;\r\n      }\r\n    });\r\n\r\n    const toggleRouteType = () => {\r\n      resetFields(); // 添加重置字段操作\r\n      routeType.value = routeType.value === 'pointToPoint' ? 'multipleWaypoints' : 'pointToPoint';\r\n    };\r\n\r\n    const selectArea = (area) => {\r\n      resetFields(); // 添加重置字段操作\r\n      currentArea.value = area;\r\n      //routeType.value = 'pointToPoint'; // 默认选择点对点路线规划\r\n      routeType.value = currentArea.value === 'campus' ? 'pointToPoint' : 'pointToPoint';\r\n      transport.value = currentArea.value === 'campus' ? 'bike' : 'walk';\r\n    };\r\n\r\n    const addViaPoint = () => {\r\n      viaPoints.value.push('');\r\n    };\r\n\r\n    const searchRoute = async () => {\r\n      try {\r\n        const apiUrl = currentArea.value === 'campus' ? '/api/route-plansc' : '/api/route-plan';\r\n        const response = await axios.post(apiUrl, {\r\n          area: currentArea.value,\r\n          type: routeType.value,\r\n          startPoint: startPoint.value,\r\n          endPoint: endPoint.value,\r\n          currentLocation: currentLocation.value,\r\n          viaPoints: viaPoints.value,\r\n          transport: transport.value,\r\n        });\r\n\r\n        if (response.data.success) {\r\n          routeInfo.value = response.data.info;\r\n        } else {\r\n          error.value = response.data.error;\r\n        }\r\n      } catch (err) {\r\n        error.value = '搜索路线时发生错误。';\r\n      }\r\n    };\r\n\r\n    // 定义跳转到首页的函数\r\n    const goToDashboard = () => {\r\n      router.push('/dashboard');\r\n    };\r\n\r\n    return {\r\n      currentArea,\r\n      routeType,\r\n      startPoint,\r\n      endPoint,\r\n      currentLocation,\r\n      viaPoints,\r\n      transport,\r\n      error,\r\n      routeInfo,\r\n      selectArea,\r\n      addViaPoint,\r\n      searchRoute,\r\n      toggleRouteType,\r\n      resetFields,\r\n      goToDashboard,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.background {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n.background::before {\r\n  content: \"\";\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n  z-index: -1; /* 确保背景层在内容层之下 */\r\n}\r\n\r\n.form1 {\r\n  position: absolute;\r\n  padding:2%;\r\n  top: 5%;\r\n  left:2%;\r\n  width: 45%;\r\n  min-height: 500px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.title {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; \r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n  margin-bottom: 0.5em;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  position: absolute;\r\n  font-size: 1em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #56cfcf;\r\n}\r\n\r\n.return_button {\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  top: 2em;\r\n  left: 10%;\r\n  margin: auto;\r\n}\r\n\r\n.scenic_button {\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  top: 8em;\r\n  left: 45%;\r\n}\r\n\r\n.campus_button {\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  top: 8em;\r\n  left: 55%;\r\n}\r\n\r\n.search_button, .switch_button {\r\n  position: absolute;\r\n  top: 12em;\r\n}\r\n\r\n.search_button {\r\n  left:2.5em;\r\n}\r\n\r\n.switch_button {\r\n  left: 6em;\r\n}\r\n\r\n.add_button {\r\n  left:2.5em;\r\n}\r\n\r\n.subtitle {\r\n  color: #fefefe;\r\n  font-size: 2em; /* 设置字号大小 */\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top:2vh;\r\n  margin-bottom:2vh;\r\n}\r\n\r\n.input_start, .input_end, .input_passing {\r\n  color: #000000;\r\n  font-size: 0.5em;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif;\r\n  position: relative;\r\n  width:25%;\r\n  border-radius: 8px; /* 添加圆角 */\r\n  margin-right: 1em;\r\n}\r\n\r\n.input_start, .input_end {\r\n  margin-top: 1em;\r\n}\r\n\r\n.input_start, .input_passing {\r\n  margin-left: 1em;\r\n}\r\n\r\n.subtitle2, .error{\r\n  color: #fefefe;\r\n  font-size: 2em; /* 设置字号大小 */\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n  margin-bottom:2vh;\r\n}\r\n\r\n.routeInfo {\r\n  color: #fefefe;\r\n  font-size: 1em; /* 设置字号大小 */\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 95%;\r\n  margin-top: 0.5em;\r\n  margin-left: 1em;\r\n  margin-bottom:2vh;\r\n}\r\n\r\n.map-container {\r\n  position: absolute;\r\n  top: 5%;\r\n  right: 0%;\r\n  width: 50%;\r\n  max-width: 95%; /* 确保地图容器的最大宽度不超过页面宽度 */\r\n  height: 95%;\r\n  max-height: 100%; /* 确保地图容器的最大高度不超过页面高度 */\r\n  background-color: transparent;\r\n  overflow: auto; /* 如果内容超出容器大小，添加滚动条 */\r\n}\r\n\r\n.map-container img {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: auto;\r\n  right:0%;\r\n  max-width: 96%; /* 确保图片的最大宽度不超过其容器的宽度 */\r\n  max-height: 96%; /* 确保图片的最大高度不超过其容器的高度 */\r\n  object-fit: contain; /* 保持图片的宽高比，确保图片完整显示在容器内 */\r\n}\r\n\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}