{"ast":null,"code":"import axios from 'axios';\nimport { ref } from 'vue';\nexport default {\n  setup() {\n    const username = ref('');\n    const password = ref('');\n    const loginError = ref(''); // 用于存储登录错误信息\n\n    const handleSubmit = async () => {\n      try {\n        const response = await axios.post('http://localhost:3000/api/login', {\n          username: username.value,\n          password: password.value\n        });\n        if (response.status === 200) {\n          // 登录成功处理\n          alert('登录成功');\n          //loginError.value = 'OK';\n          // 这里可以添加代码来处理登录成功的逻辑，如跳转到主页\n        }\n        if (response.status === 401) {\n          // 登录失败时设置错误信息\n          alert('登录失败');\n          loginError.value = '登录失败，请检查您的用户名和密码。';\n        }\n      } catch (error) {\n        // 网络或其他错误处理\n        loginError.value = '登录过程中发生错误。';\n      }\n    };\n\n    // 返回响应式引用供模板使用\n    return {\n      username,\n      password,\n      loginError,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","setup","username","password","loginError","handleSubmit","response","post","value","status","alert","error"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\vue\\frontend\\src\\components\\myLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>登录</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">账户:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">登录</button>\r\n      <p v-if=\"loginError\">{{ loginError }}</p> <!-- 显示登录错误信息 -->\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const username = ref('');\r\n    const password = ref('');\r\n    const loginError = ref(''); // 用于存储登录错误信息\r\n\r\n    const handleSubmit = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/login', {\r\n          username: username.value,\r\n          password: password.value\r\n        });\r\n        if (response.status === 200) {\r\n          // 登录成功处理\r\n          alert('登录成功');\r\n          //loginError.value = 'OK';\r\n          // 这里可以添加代码来处理登录成功的逻辑，如跳转到主页\r\n        }\r\n        if (response.status === 401) {\r\n          // 登录失败时设置错误信息\r\n          alert('登录失败');\r\n          loginError.value = '登录失败，请检查您的用户名和密码。';\r\n        }\r\n      } catch (error) {\r\n        // 网络或其他错误处理\r\n        loginError.value = '登录过程中发生错误。';\r\n      }\r\n    };\r\n\r\n    // 返回响应式引用供模板使用\r\n    return {\r\n      username,\r\n      password,\r\n      loginError,\r\n      handleSubmit\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 您的样式 */\r\n.login-container {\r\n  /* 容器样式 */\r\n}\r\n</style>"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,QAAO,GAAIH,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMI,UAAS,GAAIJ,GAAG,CAAC,EAAE,CAAC,EAAE;;IAE5B,MAAMK,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,iCAAiC,EAAE;UACnEL,QAAQ,EAAEA,QAAQ,CAACM,KAAK;UACxBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B;UACAC,KAAK,CAAC,MAAM,CAAC;UACb;UACA;QACF;QACA,IAAIJ,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B;UACAC,KAAK,CAAC,MAAM,CAAC;UACbN,UAAU,CAACI,KAAI,GAAI,mBAAmB;QACxC;MACF,EAAE,OAAOG,KAAK,EAAE;QACd;QACAP,UAAU,CAACI,KAAI,GAAI,YAAY;MACjC;IACF,CAAC;;IAED;IACA,OAAO;MACLN,QAAQ;MACRC,QAAQ;MACRC,UAAU;MACVC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}