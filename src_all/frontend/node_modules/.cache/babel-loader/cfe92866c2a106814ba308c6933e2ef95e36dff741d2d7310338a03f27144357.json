{"ast":null,"code":"import { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const isLoggedIn = ref(false); // 默认用户未登录\n    const username = ref(''); // 用户名初始为空\n    const router = useRouter();\n\n    // 这里仅为示例，您需要根据实际逻辑来检测用户登录状态\n    // 例如，从localStorage或者通过API获取\n    function checkLoginStatus() {\n      // 假设我们检查localStorage中是否有用户token\n      const userToken = localStorage.getItem('userToken');\n      if (userToken) {\n        isLoggedIn.value = true;\n        // 假设我们从token中获取用户名\n        username.value = '用户名'; // 这里应替换为实际用户名\n      }\n    }\n    checkLoginStatus(); // 初始检查登录状态\n\n    // 可以在适当的时机调用这个方法来检查登录状态\n    // 例如，组件挂载时或页面刷新时\n\n    return {\n      isLoggedIn,\n      username\n    };\n  }\n};","map":{"version":3,"names":["ref","useRoute","useRouter","setup","isLoggedIn","username","router","checkLoginStatus","userToken","localStorage","getItem","value"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\vue\\frontend\\src\\views\\myHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <h1>欢迎来到学生游学系统</h1>\r\n    <!-- 如果用户未登录，则显示登录按钮 -->\r\n    <router-link to=\"/login\" v-if=\"!isLoggedIn\">\r\n      <button>登录</button>\r\n    </router-link>\r\n    <!-- 如果用户已登录，则显示欢迎信息 -->\r\n    <div v-else>\r\n      欢迎, {{ username }}!\r\n    </div>\r\n    <!-- 其他内容 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    const isLoggedIn = ref(false); // 默认用户未登录\r\n    const username = ref(''); // 用户名初始为空\r\n    const router = useRouter();\r\n\r\n    // 这里仅为示例，您需要根据实际逻辑来检测用户登录状态\r\n    // 例如，从localStorage或者通过API获取\r\n    function checkLoginStatus() {\r\n      // 假设我们检查localStorage中是否有用户token\r\n      const userToken = localStorage.getItem('userToken');\r\n      if (userToken) {\r\n        isLoggedIn.value = true;\r\n        // 假设我们从token中获取用户名\r\n        username.value = '用户名'; // 这里应替换为实际用户名\r\n      }\r\n    }\r\n\r\n    checkLoginStatus(); // 初始检查登录状态\r\n\r\n    // 可以在适当的时机调用这个方法来检查登录状态\r\n    // 例如，组件挂载时或页面刷新时\r\n\r\n    return {\r\n      isLoggedIn,\r\n      username,\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":"AAgBA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAY;AAEhD,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIJ,GAAG,CAAC,KAAK,CAAC,EAAE;IAC/B,MAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B,MAAMM,MAAK,GAAIJ,SAAS,CAAC,CAAC;;IAE1B;IACA;IACA,SAASK,gBAAgBA,CAAA,EAAG;MAC1B;MACA,MAAMC,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACnD,IAAIF,SAAS,EAAE;QACbJ,UAAU,CAACO,KAAI,GAAI,IAAI;QACvB;QACAN,QAAQ,CAACM,KAAI,GAAI,KAAK,EAAE;MAC1B;IACF;IAEAJ,gBAAgB,CAAC,CAAC,EAAE;;IAEpB;IACA;;IAEA,OAAO;MACLH,UAAU;MACVC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}