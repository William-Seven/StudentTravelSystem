{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'WriteDiary',\n  setup() {\n    const router = useRouter();\n    const diary = ref({\n      title: '',\n      author: '',\n      description: '',\n      content: ''\n    }); // 存储日记表单数据 \n\n    const submitDiary = async () => {\n      try {\n        const response = await axios.post('/api/diary-write', diary.value);\n        if (response.data.success) {\n          alert('日记上传成功'); // 告知用户上传成功\n          // 可能还需要在这里做其他事情，比如重定向或清空表单\n        } else {\n          console.error('上传失败:', response.data.message);\n        }\n      } catch (err) {\n        console.error('上传日记时发生错误:', err);\n        alert('上传日记时发生错误，请稍后重试'); // 告知用户错误\n      }\n    };\n\n    // 返回按钮\n    const goBack = () => {\n      router.go(-1); // 返回上一页\n    };\n    return {\n      diary,\n      submitDiary,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","name","setup","router","diary","title","author","description","content","submitDiary","response","post","value","data","success","alert","console","error","message","err","goBack","go"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\MyGithub\\src_all\\frontend\\src\\components\\WriteDiary.vue"],"sourcesContent":["<template>\r\n    <div class=\"background\"></div>\r\n    <form class=\"form\">\r\n        <div class=\"write-diary\">\r\n            <button class=\"return_button\" @click.prevent=\"goBack\">返回</button>\r\n            <h1 class=\"title\">写日记</h1>\r\n            <!-- 表单输入 -->\r\n            <form @submit.prevent=\"submitDiary\">\r\n                <div>\r\n                    <label class=\"label_title\" for=\"title\">标题:</label>\r\n                    <input type=\"text\" id=\"title\" v-model=\"diary.title\" required>\r\n                </div>\r\n                <div>\r\n                    <label class=\"label_author\" for=\"author\">作者:</label>\r\n                    <input type=\"text\" id=\"author\" v-model=\"diary.author\" required>\r\n                </div>\r\n                <div>\r\n                    <label class=\"label_description\" for=\"description\">描述对象/地点:</label>\r\n                    <input type=\"text\" id=\"description\" v-model=\"diary.description\" required>\r\n                </div>\r\n                <div>\r\n                    <label class=\"label_content\" for=\"content\">日记内容:</label>\r\n                    <textarea id=\"content\" v-model=\"diary.content\" required></textarea>\r\n                </div>\r\n                <!-- 提交按钮 -->\r\n                <button class=\"submit_button\" type=\"submit\">上传</button>\r\n            </form>\r\n        </div>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n    name: 'WriteDiary',\r\n\r\n    setup() {\r\n        const router = useRouter();\r\n       const diary = ref({\r\n      title: '',\r\n      author: '',\r\n      description: '',\r\n      content: '',\r\n    }); // 存储日记表单数据 \r\n\r\n        const submitDiary = async () => {\r\n            try {\r\n                const response = await axios.post('/api/diary-write', diary.value);\r\n\r\n                if (response.data.success) {\r\n                    alert('日记上传成功'); // 告知用户上传成功\r\n                    // 可能还需要在这里做其他事情，比如重定向或清空表单\r\n                } else {\r\n                    console.error('上传失败:', response.data.message);\r\n                }\r\n            } catch (err) {\r\n                console.error('上传日记时发生错误:', err);\r\n                alert('上传日记时发生错误，请稍后重试'); // 告知用户错误\r\n            }\r\n        };\r\n\r\n        // 返回按钮\r\n        const goBack = () => {\r\n            router.go(-1); // 返回上一页\r\n        };\r\n\r\n        return {\r\n            diary,\r\n            submitDiary,\r\n            goBack,\r\n        };\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 表单样式 */\r\n.background {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-attachment: fixed;\r\n  overflow: hidden;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n}\r\n\r\n.background::before {\r\n  content: \"\";\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: url('~@/assets/img/background.png');\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n  z-index: -1; /* 确保背景层在内容层之下 */\r\n}\r\n\r\n.form {\r\n  position: absolute;\r\n  transform: translate(-50%, 0%);\r\n  padding:2%;\r\n  top: 10%;\r\n  left:50%;\r\n  width: 45%;\r\n  min-height: 500px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  border-radius: 20px; /* 设置圆角为20像素 */\r\n  /* 其他样式，例如边框、阴影等 */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 添加轻微的阴影效果 */\r\n}\r\n\r\n.title {\r\n  color: #fefefe;\r\n  font-size: 4em; /* 设置字号大小 */\r\n  margin:0%;\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n  max-width: 80%;\r\n  margin-top: 0vh; \r\n  text-align: center;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n  margin-bottom: 0.5em;\r\n}\r\n\r\nbutton {\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  font-size: 1em;\r\n  border: 1px solid #000; /* 边框样式，可以根据需要调整 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针手势 */\r\n  border-radius: 8px; /* 添加圆角 */\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #56cfcf;\r\n}\r\n\r\n.return_button {\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n  top: 2em;\r\n  left: 10%;\r\n}\r\n\r\n.submit_button {\r\n  text-align: center;\r\n  font-size: 1.5em;\r\n  margin-top: 0.5em;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n  display: block;\r\n}\r\n\r\nform > div {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #fefefe;\r\n  font-size: 2em; /* 设置字号大小 */\r\n  font-family: 'STKaiti', 'KaiTi', sans-serif; /* 优先使用华文楷体，如果不可用则使用无衬线字体 */\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea {\r\n  width: 100%;\r\n  font-size: 1.5em;\r\n  margin-top: 0.5em;\r\n  margin-left: auto; /* 左外边距自动 */\r\n  margin-right: auto; /* 右外边距自动 */\r\n  display: block;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  text-align: center;\r\n  min-height: 2em;\r\n}\r\n\r\ntextarea {\r\n  resize: none;\r\n  height: 10em;\r\n}\r\n\r\n\r\n</style>"],"mappings":"AAgCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACXC,IAAI,EAAE,YAAY;EAElBC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIH,SAAS,CAAC,CAAC;IAC3B,MAAMI,KAAI,GAAIN,GAAG,CAAC;MACnBO,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE;IACX,CAAC,CAAC,EAAE;;IAEA,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,kBAAkB,EAAEP,KAAK,CAACQ,KAAK,CAAC;QAElE,IAAIF,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;UACvBC,KAAK,CAAC,QAAQ,CAAC,EAAE;UACjB;QACJ,OAAO;UACHC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEP,QAAQ,CAACG,IAAI,CAACK,OAAO,CAAC;QACjD;MACJ,EAAE,OAAOC,GAAG,EAAE;QACVH,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEE,GAAG,CAAC;QAChCJ,KAAK,CAAC,iBAAiB,CAAC,EAAE;MAC9B;IACJ,CAAC;;IAED;IACA,MAAMK,MAAK,GAAIA,CAAA,KAAM;MACjBjB,MAAM,CAACkB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACnB,CAAC;IAED,OAAO;MACHjB,KAAK;MACLK,WAAW;MACXW;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}