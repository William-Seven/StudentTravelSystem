{"ast":null,"code":"import axios from 'axios';\nimport { ref } from 'vue';\nexport default {\n  setup() {\n    const username = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const registerError = ref(''); // 用于存储注册错误信息\n\n    const handleSubmit = async () => {\n      if (password.value !== confirmPassword.value) {\n        registerError.value = '两次输入的密码不一致。';\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:3000/api/register', {\n          username: username.value,\n          password: password.value\n        });\n        if (response.status === 200) {\n          // 注册成功处理\n          alert('注册成功');\n          // 这里可以添加代码来处理注册成功的逻辑，如跳转到登录页面\n        } else if (response.status === 409) {\n          // 用户名已存在\n          registerError.value = '该用户名已被注册。';\n        } else {\n          // 注册失败时设置错误信息\n          registerError.value = '注册失败，请重试。';\n        }\n      } catch (error) {\n        // 网络或其他错误处理\n        //registerError.value = '注册过程中发生错误。' + error.message;\n      }\n    };\n\n    // 返回响应式引用供模板使用\n    return {\n      username,\n      password,\n      confirmPassword,\n      registerError,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","setup","username","password","confirmPassword","registerError","handleSubmit","value","response","post","status","alert","error"],"sources":["D:\\Users\\SevenGrass\\Documents\\WILLIAMZHANG\\DataStrucCourseDes\\vue\\frontend\\src\\components\\myRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"register-container\">\r\n        <h2>注册</h2>\r\n        <form @submit.prevent=\"handleSubmit\">\r\n            <div>\r\n                <label for=\"username\">用户名:</label>\r\n                <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"password\">密码:</label>\r\n                <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n            </div>\r\n            <div>\r\n                <label for=\"confirmPassword\">确认密码:</label>\r\n                <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n            </div>\r\n            <button type=\"submit\">注册</button>\r\n            <p v-if=\"registerError\">{{ registerError }}</p> <!-- 显示注册错误信息 -->\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n    setup() {\r\n        const username = ref('');\r\n        const password = ref('');\r\n        const confirmPassword = ref('');\r\n        const registerError = ref(''); // 用于存储注册错误信息\r\n\r\n        const handleSubmit = async () => {\r\n            if (password.value !== confirmPassword.value) {\r\n                registerError.value = '两次输入的密码不一致。';\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/api/register', {\r\n                    username: username.value,\r\n                    password: password.value\r\n                });\r\n                if (response.status === 200) {\r\n                    // 注册成功处理\r\n                    alert('注册成功');\r\n                    // 这里可以添加代码来处理注册成功的逻辑，如跳转到登录页面\r\n                } else if (response.status === 409) {\r\n                    // 用户名已存在\r\n                    registerError.value = '该用户名已被注册。';\r\n                } else {\r\n                    // 注册失败时设置错误信息\r\n                    registerError.value = '注册失败，请重试。';\r\n                }\r\n            } catch (error) {\r\n                // 网络或其他错误处理\r\n                //registerError.value = '注册过程中发生错误。' + error.message;\r\n            }\r\n        };\r\n\r\n        // 返回响应式引用供模板使用\r\n        return {\r\n            username,\r\n            password,\r\n            confirmPassword,\r\n            registerError,\r\n            handleSubmit\r\n        };\r\n    }\r\n};\r\n</script>"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,QAAO,GAAIF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,QAAO,GAAIH,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMI,eAAc,GAAIJ,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMK,aAAY,GAAIL,GAAG,CAAC,EAAE,CAAC,EAAE;;IAE/B,MAAMM,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAIH,QAAQ,CAACI,KAAI,KAAMH,eAAe,CAACG,KAAK,EAAE;QAC1CF,aAAa,CAACE,KAAI,GAAI,aAAa;QACnC;MACJ;MAEA,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,oCAAoC,EAAE;UACpEP,QAAQ,EAAEA,QAAQ,CAACK,KAAK;UACxBJ,QAAQ,EAAEA,QAAQ,CAACI;QACvB,CAAC,CAAC;QACF,IAAIC,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UACzB;UACAC,KAAK,CAAC,MAAM,CAAC;UACb;QACJ,OAAO,IAAIH,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAChC;UACAL,aAAa,CAACE,KAAI,GAAI,WAAW;QACrC,OAAO;UACH;UACAF,aAAa,CAACE,KAAI,GAAI,WAAW;QACrC;MACJ,EAAE,OAAOK,KAAK,EAAE;QACZ;QACA;MAAA;IAER,CAAC;;IAED;IACA,OAAO;MACHV,QAAQ;MACRC,QAAQ;MACRC,eAAe;MACfC,aAAa;MACbC;IACJ,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}